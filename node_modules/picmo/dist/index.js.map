{"version":3,"file":"index.js","sources":["../../../node_modules/emojibase/esm/index.js","../src/util.ts","../src/data/DataStore.ts","../src/rules.ts","../src/data/InMemoryStore.ts","../src/data/emojiData.ts","../src/focusTrap.ts","../src/themes.ts","../src/views/view.ts","../src/icons/clock-solid.svg?raw","../src/icons/flag-solid.svg?raw","../src/icons/face-frown-open-solid.svg?raw","../src/icons/gamepad-solid.svg?raw","../src/icons/lightbulb-solid.svg?raw","../src/icons/mug-saucer-solid.svg?raw","../src/icons/plane-solid.svg?raw","../src/icons/robot-solid.svg?raw","../src/icons/face-sad-tear-solid.svg?raw","../src/icons/magnifying-glass-solid.svg?raw","../src/icons/face-grin-solid.svg?raw","../src/icons/icons-solid.svg?raw","../src/icons/tree-solid.svg?raw","../src/icons/user-group-solid.svg?raw","../src/icons/triangle-exclamation-solid.svg?raw","../src/icons/xmark-solid.svg?raw","../src/icons/index.ts","../src/Template.ts","../src/views/Image.ts","../src/renderers/renderer.ts","../src/renderers/native.ts","../src/i18n/lang-en.ts","../src/data/IndexedDbStore.ts","../src/webStorageShim.ts","../src/recents/RecentsProvider.ts","../src/recents/WebStorageProvider.ts","../src/recents/LocalStorageProvider.ts","../src/options.ts","../src/events.ts","../src/globalConfig.ts","../src/AppEvents.ts","../src/ExternalEvents.ts","../src/views/BaseEmojiCategory.ts","../src/views/Emoji.template.ts","../src/views/Emoji.ts","../src/focusGrid.ts","../src/views/EmojiContainer.template.ts","../src/views/EmojiContainer.ts","../src/views/EmojiCategory.template.ts","../src/views/EmojiCategory.ts","../src/views/RecentEmojiContainer.ts","../src/views/RecentEmojiCategory.template.ts","../src/views/RecentEmojiCategory.ts","../src/views/CustomEmojiCategory.template.ts","../src/views/CustomEmojiCategory.ts","../src/LazyLoader.ts","../src/views/EmojiArea.ts","../src/views/ErrorMessage.template.ts","../src/views/ErrorMessage.ts","../src/views/DataError.template.ts","../src/views/DataError.ts","../src/views/Preview.ts","../src/views/Search.template.ts","../src/views/Search.ts","../src/views/VariantPopup.template.ts","../src/views/VariantPopup.ts","../src/views/CategoryTab.template.ts","../src/views/CategoryTab.ts","../src/views/CategoryTabs.template.ts","../src/views/CategoryTabs.ts","../src/emojiSupport.ts","../src/views/EmojiPicker.template.ts","../src/views/EmojiPicker.ts","../src/viewFactory.ts","../src/i18n/bundle.ts","../../../node_modules/style-inject/dist/style-inject.es.js","../src/injectStyles.ts","../src/createPicker.ts","../src/i18n/lang-de.ts","../src/i18n/lang-fi.ts","../src/i18n/lang-fr.ts","../src/i18n/lang-nl.ts","../src/i18n/lang-no.ts","../src/i18n/lang-sv.ts","../src/recents/SessionStorageProvider.ts","../src/recents/InMemoryProvider.ts","../src/index.ts"],"sourcesContent":["// Bundled with Packemon: https://packemon.dev\n// Platform: browser, Support: stable, Format: esm\n\n/**\n * Append a skin tone index (number) to the end of a shortcode.\n */\nfunction appendSkinToneIndex(shortcode, emoji, prefix = '') {\n  return `${shortcode}_${prefix}${Array.isArray(emoji.tone) ? emoji.tone.join('-') : emoji.tone}`;\n}\n\nconst SEQUENCE_REMOVAL_PATTERN = /200D|FE0E|FE0F/g; // Use numbers instead of string values, as the filesize is greatly reduced.\n\nconst TEXT = 0;\nconst EMOJI = 1;\nconst FEMALE = 0;\nconst MALE = 1;\nconst FULLY_QUALIFIED = 0;\nconst MINIMALLY_QUALIFIED = 1;\nconst UNQUALIFIED = 2;\nconst LIGHT_SKIN = 1;\nconst MEDIUM_LIGHT_SKIN = 2;\nconst MEDIUM_SKIN = 3;\nconst MEDIUM_DARK_SKIN = 4;\nconst DARK_SKIN = 5;\nconst GROUP_KEY_SMILEYS_EMOTION = 'smileys-emotion';\nconst GROUP_KEY_PEOPLE_BODY = 'people-body';\nconst GROUP_KEY_ANIMALS_NATURE = 'animals-nature';\nconst GROUP_KEY_FOOD_DRINK = 'food-drink';\nconst GROUP_KEY_TRAVEL_PLACES = 'travel-places';\nconst GROUP_KEY_ACTIVITIES = 'activities';\nconst GROUP_KEY_OBJECTS = 'objects';\nconst GROUP_KEY_SYMBOLS = 'symbols';\nconst GROUP_KEY_FLAGS = 'flags';\nconst GROUP_KEY_COMPONENT = 'component';\nconst SKIN_KEY_LIGHT = 'light';\nconst SKIN_KEY_MEDIUM_LIGHT = 'medium-light';\nconst SKIN_KEY_MEDIUM = 'medium';\nconst SKIN_KEY_MEDIUM_DARK = 'medium-dark';\nconst SKIN_KEY_DARK = 'dark'; // Important release versions and locales in generating accurate data.\n\nconst LATEST_EMOJI_VERSION = '14.0';\nconst LATEST_UNICODE_VERSION = '14.0.0';\nconst LATEST_CLDR_VERSION = '40';\nconst FIRST_UNICODE_EMOJI_VERSION = '6.0.0';\nconst EMOJI_VERSIONS = ['1.0', '2.0', '3.0', '4.0', '5.0', '11.0', '12.0', '12.1', '13.0', '13.1', '14.0'];\nconst UNICODE_VERSIONS = ['6.0', '6.1', '6.2', '6.3', '7.0', '8.0', '9.0', '10.0', '11.0', '12.0', '12.1', '13.0', '14.0'];\nconst SUPPORTED_LOCALES = ['da', // Danish\n'de', // German\n'en', // English\n'en-gb', // English (Great Britain)\n'es', // Spanish\n'es-mx', // Spanish (Mexico)\n'et', // Estonian\n'fi', // Finnish\n'fr', // French\n'hu', // Hungarian\n'it', // Italian\n'ja', // Japanese\n'ko', // Korean\n'lt', // Lithuanian\n'ms', // Malay\n'nb', // Norwegian\n'nl', // Dutch\n'pl', // Polish\n'pt', // Portuguese\n'ru', // Russian\n'sv', // Swedish\n'th', // Thai\n'uk', // Ukrainian\n'zh', // Chinese\n'zh-hant' // Chinese (Traditional)\n]; // Special options for emoticon permutations.\n\nconst EMOTICON_OPTIONS = {\n  // 🧙‍♂️ man mage\n  ':{>': {\n    withNose: false\n  },\n  // 💔 broken heart\n  '</3': {\n    isFace: false\n  },\n  // ❤️ red heart\n  '<3': {\n    isFace: false\n  },\n  // 🤘 sign of the horns\n  '\\\\m/': {\n    isFace: false\n  },\n  '\\\\M/': {\n    isFace: false\n  },\n  // 👹 ogre\n  '0)': {\n    withNose: false\n  }\n};\n\nfunction getFetchUrl(path, version, cdnUrl) {\n  let fetchUrl = `https://cdn.jsdelivr.net/npm/emojibase-data@${version}/${path}`;\n\n  if (typeof cdnUrl === 'function') {\n    fetchUrl = cdnUrl(path, version);\n  } else if (typeof cdnUrl === 'string') {\n    fetchUrl = `${cdnUrl}/${path}`;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!path || !path.endsWith('.json')) {\n      throw new Error('A valid JSON dataset is required to fetch.');\n    }\n\n    if (!fetchUrl || !/^https?:\\/\\//.test(fetchUrl) || !fetchUrl.endsWith('.json')) {\n      throw new Error('A valid CDN url is required to fetch.');\n    }\n\n    if (!version) {\n      throw new Error('A valid release version is required.');\n    }\n  }\n\n  return fetchUrl;\n}\n/**\n * This function will fetch `emojibase-data` JSON files from our CDN, parse them,\n * and return the response. It requires a file path relative to the `emojibase-data` package\n * as the 1st argument and an optional object of options as the 2rd argument.\n *\n * ```ts\n * import { fetchFromCDN } from 'emojibase';\n *\n * await fetchFromCDN('ja/compact.json', { version: '2.1.3' });\n * await fetchFromCDN('ja/compact.json', { cdnUrl: 'https://example.com/cdn/emojidata/latest' });\n * await fetchFromCDN('ja/compact.json', {\n *     cdnUrl: (path: string, version: string) => {\n *         return `https://example.com/cdn/emojidata/${version}/${path}`;\n *     }\n * });\n * ```\n */\n\n\nasync function fetchFromCDN(path, options = {}) {\n  const {\n    local = false,\n    version = 'latest',\n    cdnUrl,\n    ...opts\n  } = options;\n  const fetchUrl = getFetchUrl(path, version, cdnUrl);\n  const storage = local ? localStorage : sessionStorage;\n  const cacheKey = `emojibase/${version}/${path}`;\n  const cachedData = storage.getItem(cacheKey); // Check the cache first\n\n  if (cachedData) {\n    return Promise.resolve(JSON.parse(cachedData));\n  } // eslint-disable-next-line compat/compat\n\n\n  const response = await fetch(fetchUrl, {\n    credentials: 'omit',\n    mode: 'cors',\n    redirect: 'error',\n    ...opts\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to load Emojibase dataset.');\n  }\n\n  const data = await response.json();\n\n  try {\n    storage.setItem(cacheKey, JSON.stringify(data));\n  } catch {// Do not allow quota errors to break the app\n  }\n\n  return data;\n}\n\nconst ALIASES = {\n  discord: 'joypixels',\n  slack: 'iamcal'\n};\n/**\n * Fetches and returns localized shortcodes for the defined preset from our CDN.\n * The response is a mapping of emoji hexcodes to shortcodes (either a string or array of strings).\n * Uses `fetchFromCDN` under the hood.\n *\n * ```ts\n * import { fetchShortcodes } from 'emojibase';\n *\n * await fetchShortcodes('ja', 'cldr', { version: '2.1.3' });\n * ```\n */\n\nasync function fetchShortcodes(locale, preset, options) {\n  var _ALIASES$preset;\n\n  return fetchFromCDN(`${locale}/shortcodes/${(_ALIASES$preset = ALIASES[preset]) !== null && _ALIASES$preset !== void 0 ? _ALIASES$preset : preset}.json`, options);\n}\n/**\n * Will join shortcodes from multiple shortcode datasets into a single emoji object\n * using its hexcode. Will remove duplicates in the process.\n */\n\n\nfunction joinShortcodesToEmoji(emoji, shortcodeDatasets) {\n  if (shortcodeDatasets.length === 0) {\n    return emoji;\n  }\n\n  const list = new Set(emoji.shortcodes);\n  shortcodeDatasets.forEach(dataset => {\n    const shortcodes = dataset[emoji.hexcode];\n\n    if (Array.isArray(shortcodes)) {\n      shortcodes.forEach(code => list.add(code));\n    } else if (shortcodes) {\n      list.add(shortcodes);\n    }\n  });\n  emoji.shortcodes = [...list];\n\n  if (emoji.skins) {\n    emoji.skins.forEach(skin => {\n      joinShortcodesToEmoji(skin, shortcodeDatasets);\n    });\n  }\n\n  return emoji;\n}\n\nfunction flattenEmojiData(data, shortcodeDatasets = []) {\n  const emojis = [];\n  data.forEach(emoji => {\n    if (emoji.skins) {\n      // Dont include nested skins array\n      const {\n        skins,\n        ...baseEmoji\n      } = emoji;\n      emojis.push(joinShortcodesToEmoji(baseEmoji, shortcodeDatasets)); // Push each skin modification into the root list\n\n      skins.forEach(skin => {\n        const skinEmoji = { ...skin\n        }; // Inherit tags from parent if they exist\n\n        if (baseEmoji.tags) {\n          skinEmoji.tags = [...baseEmoji.tags];\n        }\n\n        emojis.push(joinShortcodesToEmoji(skinEmoji, shortcodeDatasets));\n      });\n    } else {\n      emojis.push(joinShortcodesToEmoji(emoji, shortcodeDatasets));\n    }\n  });\n  return emojis;\n}\n\nfunction joinShortcodes(emojis, shortcodeDatasets) {\n  if (shortcodeDatasets.length === 0) {\n    return emojis;\n  }\n\n  emojis.forEach(emoji => {\n    joinShortcodesToEmoji(emoji, shortcodeDatasets);\n  });\n  return emojis;\n}\n\nasync function fetchEmojis(locale, options = {}) {\n  const {\n    compact = false,\n    flat = false,\n    shortcodes: presets = [],\n    ...opts\n  } = options;\n  const emojis = await fetchFromCDN(`${locale}/${compact ? 'compact' : 'data'}.json`, opts);\n  let shortcodes = [];\n\n  if (presets.length > 0) {\n    shortcodes = await Promise.all(presets.map(preset => {\n      let promise;\n\n      if (preset.includes('/')) {\n        const [customLocale, customPreset] = preset.split('/');\n        promise = fetchShortcodes(customLocale, customPreset, opts);\n      } else {\n        promise = fetchShortcodes(locale, preset, opts);\n      } // Ignore as the primary dataset should still load\n\n\n      return promise.catch(() => ({}));\n    }));\n  }\n\n  return flat ? flattenEmojiData(emojis, shortcodes) : joinShortcodes(emojis, shortcodes);\n}\n/**\n * Fetches and returns localized messages for emoji related information like groups and sub-groups.\n * Uses `fetchFromCDN` under the hood.\n *\n * ```ts\n * import { fetchMessages } from 'emojibase';\n *\n * await fetchMessages('zh', { version: '2.1.3' });\n * ```\n */\n\n\nasync function fetchMessages(locale, options) {\n  return fetchFromCDN(`${locale}/messages.json`, options);\n}\n/**\n * This function will convert an array of numerical codepoints to a literal emoji Unicode character.\n *\n * ```ts\n * import { fromCodepointToUnicode } from 'emojibase';\n *\n * fromCodepointToUnicode([128104, 8205, 128105, 8205, 128103, 8205, 128102]); // 👨‍👩‍👧‍👦\n * ```\n */\n\n\nfunction fromCodepointToUnicode(codepoint) {\n  return String.fromCodePoint(...codepoint);\n}\n/**\n * This function will convert a hexadecimal codepoint to an array of numerical codepoints.\n * By default, it will split the hexcode using a dash, but can be customized with the 2nd argument.\n *\n * ```ts\n * import { fromHexcodeToCodepoint } from 'emojibase';\n *\n * fromHexcodeToCodepoint('270A-1F3FC'); // [9994, 127996]\n * fromHexcodeToCodepoint('270A 1F3FC', ' '); // [9994, 127996]\n * ```\n */\n\n\nfunction fromHexcodeToCodepoint(code, joiner = '-') {\n  return code.split(joiner).map(point => Number.parseInt(point, 16));\n}\n/**\n * This function will convert a literal emoji Unicode character into a dash separated\n * hexadecimal codepoint. Unless `false` is passed as the 2nd argument, zero width\n * joiner's and variation selectors are removed.\n *\n * ```ts\n * import { fromUnicodeToHexcode } from 'emojibase';\n *\n * fromUnicodeToHexcode('👨‍👩‍👧‍👦'); // 1F468-1F469-1F467-1F466\n * fromUnicodeToHexcode('👨‍👩‍👧‍👦', false); // 1F468-200D-1F469-200D-1F467-200D-1F466\n * ```\n */\n\n\nfunction fromUnicodeToHexcode(unicode, strip = true) {\n  const hexcode = [];\n  [...unicode].forEach(codepoint => {\n    var _codepoint$codePointA, _codepoint$codePointA2;\n\n    let hex = (_codepoint$codePointA = (_codepoint$codePointA2 = codepoint.codePointAt(0)) === null || _codepoint$codePointA2 === void 0 ? void 0 : _codepoint$codePointA2.toString(16).toUpperCase()) !== null && _codepoint$codePointA !== void 0 ? _codepoint$codePointA : '';\n\n    while (hex.length < 4) {\n      hex = `0${hex}`;\n    }\n\n    if (!strip || strip && !hex.match(SEQUENCE_REMOVAL_PATTERN)) {\n      hexcode.push(hex);\n    }\n  });\n  return hexcode.join('-');\n}\n/**\n * This function will generate multiple permutations of a base emoticon character.\n * The following permutations will occur:\n *\n * - `)` mouth will be replaced with `]` and `}`. The same applies to sad/frowning mouths.\n * - `/` mouth will be replaced with `\\`.\n * - `:` eyes will be replaced with `=`.\n * - Supports a `-` nose, by injecting between the eyes and mouth.\n * - Supports both uppercase and lowercase variants.\n *\n * ```ts\n * import { generateEmoticonPermutations } from 'emojibase';\n *\n * generateEmoticonPermutations(':)'); // =-), =-}, :-], =-], :-}, :-), =}, =], =), :}, :], :)\n * ```\n *\n * > The base emoticon must follow a set of naming guidelines to work properly.\n *\n * Furthermore, this function accepts an options object as the 2nd argument, as a means to customize\n * the output.\n *\n * - `isFace` (bool) - Toggles face permutations (mouth and eye variants). Defaults to `true`.\n * - `withNose` (bool) - Toggles nose inclusion. Defaults to `true`.\n *\n * ```ts\n * generateEmoticonPermutations(':)', { withNose: false }); // =}, =], =), :}, :], :)\n * generateEmoticonPermutations('\\\\m/', { isFace: false }); // \\m/, \\M/\n * ```\n */\n\n\nfunction generateEmoticonPermutations(emoticon, options = {}) {\n  const {\n    isFace = true,\n    withNose = true\n  } = options;\n  const list = [emoticon]; // Uppercase variant\n\n  if (emoticon.toUpperCase() !== emoticon) {\n    list.push(...generateEmoticonPermutations(emoticon.toUpperCase(), options));\n  }\n\n  if (isFace) {\n    // Backwards slash mouth variant\n    if (emoticon.includes('/')) {\n      list.push(...generateEmoticonPermutations(emoticon.replace('/', '\\\\'), options));\n    } // Bracket and curly brace mouth variants\n\n\n    if (emoticon.includes(')')) {\n      list.push(...generateEmoticonPermutations(emoticon.replace(')', ']'), options), ...generateEmoticonPermutations(emoticon.replace(')', '}'), options));\n    }\n\n    if (emoticon.includes('(')) {\n      list.push(...generateEmoticonPermutations(emoticon.replace('(', '['), options), ...generateEmoticonPermutations(emoticon.replace('(', '{'), options));\n    } // Eye variant\n\n\n    if (emoticon.includes(':')) {\n      list.push(...generateEmoticonPermutations(emoticon.replace(':', '='), options));\n    } // Nose variant for ALL\n\n\n    if (withNose) {\n      list.forEach(emo => {\n        if (!emo.includes('-')) {\n          list.push(`${emo.slice(0, -1)}-${emo.slice(-1)}`);\n        }\n      });\n    }\n  } // Sort from longest to shortest\n\n\n  list.sort((a, b) => b.length - a.length);\n  return [...new Set(list)];\n}\n\nconst STRIP_PATTERN = new RegExp(`(-| )?(${SEQUENCE_REMOVAL_PATTERN.source})`, 'g');\n/**\n * This function will strip zero width joiners (`200D`) and variation selectors\n * (`FE0E`, `FE0F`) from a hexadecimal codepoint.\n *\n * ```ts\n * import { stripHexcode } from 'emojibase';\n *\n * stripHexcode('1F468-200D-2695-FE0F'); // 1F468-2695\n * ```\n */\n\nfunction stripHexcode(hexcode) {\n  return hexcode.replace(STRIP_PATTERN, '');\n}\n\nexport { DARK_SKIN, EMOJI, EMOJI_VERSIONS, EMOTICON_OPTIONS, FEMALE, FIRST_UNICODE_EMOJI_VERSION, FULLY_QUALIFIED, GROUP_KEY_ACTIVITIES, GROUP_KEY_ANIMALS_NATURE, GROUP_KEY_COMPONENT, GROUP_KEY_FLAGS, GROUP_KEY_FOOD_DRINK, GROUP_KEY_OBJECTS, GROUP_KEY_PEOPLE_BODY, GROUP_KEY_SMILEYS_EMOTION, GROUP_KEY_SYMBOLS, GROUP_KEY_TRAVEL_PLACES, LATEST_CLDR_VERSION, LATEST_EMOJI_VERSION, LATEST_UNICODE_VERSION, LIGHT_SKIN, MALE, MEDIUM_DARK_SKIN, MEDIUM_LIGHT_SKIN, MEDIUM_SKIN, MINIMALLY_QUALIFIED, SEQUENCE_REMOVAL_PATTERN, SKIN_KEY_DARK, SKIN_KEY_LIGHT, SKIN_KEY_MEDIUM, SKIN_KEY_MEDIUM_DARK, SKIN_KEY_MEDIUM_LIGHT, SUPPORTED_LOCALES, TEXT, UNICODE_VERSIONS, UNQUALIFIED, appendSkinToneIndex, fetchEmojis, fetchFromCDN, fetchMessages, fetchShortcodes, flattenEmojiData, fromCodepointToUnicode, fromHexcodeToCodepoint, fromUnicodeToHexcode, generateEmoticonPermutations, joinShortcodes, joinShortcodesToEmoji, stripHexcode };\n//# sourceMappingURL=index.js.map\n","import { EmojiRecord, PickerOptions } from './types';\n\nexport function getEmojiForEvent(event: Event, emojis: EmojiRecord[]): EmojiRecord | null {\n  const target = event.target as HTMLElement;\n  const emojiElement = target.closest('[data-emoji]') as HTMLElement;\n  if (emojiElement) {\n    const emoji = emojis.find(e => e.emoji === emojiElement.dataset.emoji);\n    if (emoji) {\n      return emoji;\n    }\n  }\n\n  return null;\n}\n\nexport function shouldAnimate(options: PickerOptions) {\n  const matcher = window.matchMedia?.('(prefers-reduced-motion: reduce)');\n  return options.animate && !matcher?.matches;\n}\n\nexport function caseInsensitiveIncludes(str: string, search: string) {\n  return str.toLowerCase().includes(search.toLowerCase());\n}\n\n/**\n * Creates a throttled version of a function.\n * \n * @param fn The function to throttle\n * @param wait The wait time in milliseconds\n * @returns a throttled version of fn\n */\nexport function throttle(fn: () => void, wait: number) {\n  let timeout: number | null = null;\n\n  return () => {\n    if (timeout) {\n      return;\n    }\n\n    timeout = window.setTimeout(() => {\n      fn();\n      timeout = null;\n    }, wait);\n  };\n}\n\n/**\n * Creates a debounced version of a function.\n *\n * @param fn the function to debounce\n * @param wait the wait time in milliseconds\n * @returns a debounced version of fn\n */\nexport function debounce(fn: (...args: any[]) => any, wait: number) {\n  let timeout: number | null = null;\n\n  return (...args: any[]): any => {\n    if (timeout) {\n      window.clearTimeout(timeout);\n    }\n\n    timeout = window.setTimeout(() => {\n      fn(...args);\n      timeout = null;\n    }, wait);\n  };\n}\n\nexport function animate(element: HTMLElement, keyframes: Keyframe[] | PropertyIndexedKeyframes, options: KeyframeAnimationOptions, pickerOptions: PickerOptions): Promise<Animation | void> {\n  if (shouldAnimate(pickerOptions) && element.animate) {\n    return element.animate(keyframes, options).finished;\n  }\n\n  // If animation isn't enabled or supported, find the final style state and\n  // apply it directly.\n  const propertyIndex = options.direction === 'normal' ? 1 : 0;\n  const finalState = Object.entries(keyframes).reduce((result, [key, values]) => {\n    return {\n      ...result,\n      [key]: values[propertyIndex]\n    }\n  }, {});\n  Object.assign(element.style, finalState);\n  return Promise.resolve();\n}\n\n/**\n * Takes a rendered HTML string and renders a DOM node from it.\n *\n * @param html the HTML text\n * @returns the generated HTMLElement\n */\n export function toElement<E extends Element = HTMLElement>(html: string): E {\n  const template = document.createElement('template');\n  template.innerHTML = html;\n\n  return template.content?.firstElementChild as E;\n}\n\nexport async function computeHash(obj: any) {\n  const arr = new TextEncoder().encode(obj);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', arr);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport function getPrefixedClasses(...classNames) {\n  return classNames.reduce((result, className) => ({\n    ...result,\n    [className]: prefixClassName(className)\n  }), {});\n}\n\nexport function prefixClassName(className) {\n  return `picmo__${className}`;\n}\n\nexport function empty(element: Element): Element {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n\n  return element;\n}\n\nexport function replaceChildren(parent: Element, ...children: Element[]) {\n  empty(parent).append(...children);\n}\n\nfunction isStorageAvailable(key) {\n  try {\n    window[key].length;\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport function isSessionStorageAvailable() {\n  return isStorageAvailable('sessionStorage');\n}\n\nexport function isLocalStorageAvailable() {\n  return isStorageAvailable('localStorage');\n}\n","import { Emoji, GroupMessage, Locale } from 'emojibase';\nimport { PickerOptions, EmojiRecord, Category } from '../types';\nimport { caseInsensitiveIncludes } from '../util';\n\nexport type PopulateOptions = {\n  groups: GroupMessage[];\n  emojis: Emoji[];\n  emojisEtag?: string | null;\n  messagesEtag?: string | null;\n  hash?: string | null;\n}\n\ntype SearchableEmoji = {\n  label: string;\n  tags?: string[];\n}\n\nexport type Meta = {\n  emojisEtag?: string;\n  messagesEtag?: string;\n  hash?: string;\n}\n\nexport type DataStoreFactory = { \n  (locale: Locale): DataStore; \n  deleteDatabase(locale: Locale): void;\n}\n\n/**\n * Transforms an Emoji from emojibase into an EmojiRecord.\n * \n * @param emoji the Emoji from the database\n * @returns the equivalent EmojiRecord\n */\n export function getEmojiRecord(emoji: Emoji): EmojiRecord {\n  return {\n    emoji: emoji.emoji,\n    label: emoji.label,\n    tags: emoji.tags,\n    skins: emoji.skins?.map(skin => getEmojiRecord(skin)),\n    order: emoji.order,\n    custom: false,\n    hexcode: emoji.hexcode,\n    version: emoji.version\n  };\n}\n\n  /**\n   * Given an emoji, determine if the query matches.\n   * \n   * The emoji matches if the text query matches the name or one of its tags, and if it is in the array of\n   * categories (if given).\n   * \n   * @param emoji The emoji to check\n   * @param query The text query\n   * @param categories The categories to check\n   * @returns a boolean indicating whether or not the emoji matches the query\n   */\n   export function queryMatches(emoji: SearchableEmoji, query: string, categories?: Category[]) {\n    if (categories && !categories.some(category => category.order === (emoji as Emoji).group)) {\n      return false;\n    }\n\n    return (\n      caseInsensitiveIncludes(emoji.label, query) ||\n      emoji.tags?.some(tag => caseInsensitiveIncludes(tag, query))\n    );\n  }\n\nexport abstract class DataStore {\n  locale: Locale;\n\n  constructor(locale: Locale = 'en') {\n    this.locale = locale;\n  }\n\n  abstract open(): Promise<void>;\n  abstract delete(): Promise<void>;\n  abstract close(): void;\n  abstract getEmojiCount(): Promise<number>;\n  abstract getEtags(): Promise<Record<string, string | undefined>>;\n  abstract setMeta(meta): void;\n  abstract getHash(): Promise<string>;\n  abstract isPopulated(): Promise<boolean>;\n  abstract populate(options: PopulateOptions): Promise<void>;\n  abstract getCategories(options: PickerOptions): Promise<Category[]>;\n  abstract getEmojis(category: Category, emojiVersion: number): Promise<EmojiRecord[]>;\n  abstract searchEmojis(query: string, customEmojis: EmojiRecord[], emojiVersion: number, categories: Category[]): Promise<EmojiRecord[]>;\n}\n","import { EmojiRecord } from './types';\nexport type EmojiProcessingRule = (emoji: EmojiRecord, version: number) => EmojiRecord | null;\n\nexport const rules: EmojiProcessingRule[] = [\n\n  // Prior to Emoji 14, the handshake emoji's skin tone variants was not standardized\n  // and will not render correctly as a native emoji. \n  (emoji: EmojiRecord, emojiVersion: number) => {\n    if (emoji.hexcode === '1F91D' && emojiVersion < 14) {\n      emoji.skins = [];\n    }\n\n    return emoji;\n  },\n\n  // Filter out variants that are not supported by the current version of the emoji.\n  // If a variant doesn't specify a version, it will be included. Only variants that\n  // specify a version that is greater than the current version will be filtered out.\n  (emoji: EmojiRecord, emojiVersion: number) => {\n    if (emoji.skins) {\n      emoji.skins = emoji.skins.filter((skin: EmojiRecord) => !skin.version || skin.version <= emojiVersion);\n    }\n\n    return emoji;\n  }\n];\n\nexport function applyRulesToEmoji(emoji: EmojiRecord, emojiVersion: number) {\n  if (rules.some(rule => rule(emoji, emojiVersion) === null)) {\n    return null;\n  }\n\n  return emoji;\n}\n\nexport function applyRules(emojis: EmojiRecord[], emojiVersion: number): EmojiRecord[] {\n  return emojis.filter(emoji => applyRulesToEmoji(emoji, emojiVersion) !== null);\n}\n","import { Locale, Emoji, GroupMessage } from 'emojibase';\nimport { Meta, getEmojiRecord, PopulateOptions, DataStore, queryMatches } from './DataStore';\nimport { PickerOptions, EmojiRecord, Category, CategoryKey } from '../types';\n\nimport { applyRules } from '../rules';\n\nconst instances = {} as Record<Locale, InMemoryStore>;\n\nexport function InMemoryStoreFactory(locale: Locale): DataStore {\n  if (!instances[locale]) {\n    instances[locale] = new InMemoryStore(locale);\n  }\n  return instances[locale];\n}\n\nInMemoryStoreFactory.deleteDatabase = (locale: Locale) => {\n  // Not implemented for in memory datastore\n};\n\nexport class InMemoryStore extends DataStore {\n  private categories: GroupMessage[];\n  private emojis: Emoji[];\n  private meta: Meta;\n\n  open(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  close(): void {\n    // Not implemented for in memory datastore\n  }\n\n  isPopulated(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  getEmojiCount(): Promise<number> {\n    return Promise.resolve(this.emojis.length);\n  }\n\n  getEtags(): Promise<Record<string, string | undefined>> {\n    // Not implemented for in memory datastore\n    return Promise.resolve({ foo: 'bar'});\n  }\n\n  getHash(): Promise<string> {\n    // Not implemented for in memory datastore\n    return Promise.resolve('');\n  }\n\n  populate(options: PopulateOptions) {\n    this.categories = options.groups;\n    this.emojis = options.emojis;\n    return Promise.resolve();\n  }\n\n  getCategories(options: PickerOptions): Promise<Category[]> {\n      let categories: Category[] = this.categories.filter(category => category.key !== 'component') as Category[];\n\n      if (options.showRecents) {\n        categories.unshift({ key: 'recents', order: -1 });\n      }\n\n      if (options.custom?.length) {\n        categories.push({ key: 'custom', order: 10 });\n      }\n\n      if (options.categories) {\n        const includeList = options.categories as CategoryKey[];\n        categories = categories.filter(category => includeList.includes(category.key));\n        categories.sort((a: Category, b: Category) => includeList.indexOf(a.key) - includeList.indexOf(b.key));\n      } else {\n        categories.sort((a: Category, b: Category) => a.order - b.order);\n      }\n\n      return Promise.resolve(categories);\n  }\n\n  getEmojis(category: Category, emojiVersion: number): Promise<EmojiRecord[]> {\n    const emojiResults = this.emojis\n      .filter(emoji => emoji.group === category.order)\n      .filter((e: Emoji) => e.version <= emojiVersion)\n      .sort((a: Emoji, b: Emoji) => {\n        if (a.order != null && b.order != null) {\n          return a.order - b.order;\n        }\n\n        return 0;\n      }).map(getEmojiRecord);\n\n    return Promise.resolve(applyRules(emojiResults, emojiVersion));\n  }\n\n  searchEmojis(query: string, customEmojis: EmojiRecord[], emojiVersion: number, categories: Category[]): Promise<EmojiRecord[]> {\n    const matchingEmojis = this.emojis\n      .filter(emoji => queryMatches(emoji, query, categories) && emoji.version <= emojiVersion)\n      .map(getEmojiRecord);\n\n    const matchingCustom = customEmojis.filter(emoji => queryMatches(emoji, query, categories));\n\n    const results = [\n      ...applyRules(matchingEmojis, emojiVersion),\n      ...matchingCustom\n    ];\n\n    return Promise.resolve(results);\n  }\n\n  setMeta(meta: Meta) {\n    this.meta = meta;\n  }\n}","import { Locale, MessagesDataset, fetchMessages, fetchEmojis, Emoji } from 'emojibase';\n// import { Database } from './db';\nimport { DataStoreFactory, DataStore } from './DataStore';\nimport { computeHash, isSessionStorageAvailable } from '../util';\nimport { createStorage } from '../webStorageShim';\nimport { InMemoryStoreFactory } from './InMemoryStore';\n\n/**\n * Generates the URLs for emoji data for a given emojibase version and locale.\n * \n * @param version the emojibase version (usually 'latest' is what you want)\n * @param locale the locale for the data\n * @returns an object containing the two URLs\n */\nfunction getCdnUrls(version, locale) {\n  const base = `https://cdn.jsdelivr.net/npm/emojibase-data@${version}/${locale}`;\n\n  return {\n    emojisUrl: `${base}/data.json`,\n    messagesUrl: `${base}/messages.json`,\n  };\n}\n\n/**\n * Gets the ETag for the given URL by making a HEAD request.\n * \n * @param url the URL to check\n * @returns the ETag value, or null if no ETag was found\n */\nasync function getEtag(url: string): Promise<string | null> {\n  try {\n    const response = await fetch(url, { method: 'HEAD' });\n    return response.headers.get('etag');\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * Gets the ETags for the emoji and message data.\n * \n * @param emojisUrl the URL of the emoji data\n * @param messagesUrl the URL of the message data\n * @returns a Promise that resolves to an array of the ETag values\n */\nfunction getEtags(locale): Promise<Array<string | null>> {\n  const { emojisUrl, messagesUrl } = getCdnUrls('latest', locale);\n\n  try {\n    return Promise.all([\n      getEtag(emojisUrl),\n      getEtag(messagesUrl),\n    ]);\n  } catch (error) {\n    return Promise.all([null, null]);\n  }\n}\n\n/**\n * Checks if the category or emoji data is out of date.\n * \n * This is determined by checking the ETag of the data from the CDN, and downloading the latest if the\n * ETags don't match.\n * \n * @param db the database\n * @param emojisEtag the ETag of the emojis data\n * @param messagesEtag the ETag of the messages data\n */\nasync function checkUpdates(db: DataStore, emojisEtag: string, messagesEtag: string) {\n  let etags;\n\n  try {\n    etags = await db.getEtags();\n  } catch (error) {\n    etags = {};\n  }\n\n  const { storedEmojisEtag, storedMessagesEtag } = etags;\n\n  // If either ETag does not match, repopulate the database with the latest CDN data\n  if (messagesEtag !== storedMessagesEtag || emojisEtag !== storedEmojisEtag) {\n    const [messages, emojis] = await Promise.all([fetchMessages(db.locale), fetchEmojis(db.locale)]);\n    await db.populate({\n      groups: messages.groups, \n      emojis,\n      emojisEtag,\n      messagesEtag\n    });\n  }\n}\n\n/**\n * Checks for a new version of local emoji data. This is done by comparing the stored hash with the \n * newly computed one.\n * \n * @param db The database\n * @param hash The hash of the local emoji data\n * @returns true if there is a hash mismatch and a database update is required\n */\nasync function checkLocalUpdates(db: DataStore, hash: string) {\n  const storedHash = await db.getHash();\n  return hash !== storedHash;\n}\n\n/**\n * Opens the database.\n * \n * @param locale the database locale\n * @param existingDb any existing database to use\n * @returns Promise that resolves to the database instance\n */\nasync function openDatabase(locale: Locale, factory: DataStoreFactory, existingDb?: DataStore): Promise<DataStore> {\n  let db = existingDb || factory(locale);\n  try {\n    await db.open();\n  } catch (error) {\n    console.warn('[picmo] IndexedDB not available, falling back to InMemoryStoreFactory');\n    db = InMemoryStoreFactory(locale);\n  }\n\n  return db;\n}\n\n/**\n * Initializes an emoji database with data from the CDN.\n * \n * @param locale the locale for the database\n * @param existingDb any existing database to repopulate\n * @returns a Promise that resolves to a fully populated database instance\n */\nasync function initDatabaseFromCdn(locale: Locale, factory: DataStoreFactory, existingDb?: DataStore) {\n  if (!isSessionStorageAvailable() && typeof window !== 'undefined') {\n    throw new Error('Session storage is required to use CDN emoji data.');\n  }\n\n  const db = await openDatabase(locale, factory, existingDb);\n  const [emojisEtag, messagesEtag] = await getEtags(locale);\n\n  if (!(await db.isPopulated())) {\n    const [messages, emojis] = await Promise.all([fetchMessages(locale), fetchEmojis(locale)]);\n    await db.populate({ groups: messages.groups, emojis, emojisEtag, messagesEtag });\n  } else if (emojisEtag && messagesEtag) {\n    await checkUpdates(db, emojisEtag, messagesEtag);\n  }\n\n  return db;\n}\n\n/**\n * Initializes an emoji database with local data from the emojibase-data package.\n * \n * @param locale the locale\n * @param messages the messages dataset\n * @param emojis the emoji dataset\n * @param existingDb any existing database to repopulate\n * @returns a Promise that resolves to a fully populated database instance\n */\nasync function initDatabaseWithLocalData(locale: Locale, factory: DataStoreFactory, messages: MessagesDataset, emojis: Emoji[], existingDb?: DataStore) {\n  const db = await openDatabase(locale, factory, existingDb);\n\n  const hash = await computeHash(emojis);\n  if (!(await db.isPopulated()) || await checkLocalUpdates(db, hash)) {\n    await db.populate({ groups: messages.groups, emojis, hash });\n  }\n\n  return db;\n}\n\n/**\n * Public API for initializing a database.\n * \n * @param locale the locale\n * @param staticMessages local messages dataset, if any\n * @param staticEmojis local emoji dataset, if any\n * @param existingDb any existing database to repopulate\n * @returns a Promise that resolves to the database instance\n */\nexport async function initDatabase(locale: Locale, factory: DataStoreFactory, staticMessages?: MessagesDataset, staticEmojis?: Emoji[], existingDb?: DataStore) {\n  if (staticMessages && staticEmojis) {\n    return initDatabaseWithLocalData(locale, factory, staticMessages, staticEmojis, existingDb);\n  } else {\n    return initDatabaseFromCdn(locale, factory, existingDb);\n  }\n}\n\n/**\n * Deletes a database instance for a locale.\n * @param locale the locale to delete\n */\nexport function deleteDatabase(factory: DataStoreFactory, locale: Locale) {\n  factory.deleteDatabase(locale);\n}\n","export class FocusTrap {\n  private rootElement: HTMLElement;\n\n  constructor() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  activate(rootElement: HTMLElement) {\n    this.rootElement = rootElement;\n    this.rootElement.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  deactivate() {\n    this.rootElement?.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  get focusableElements(): NodeListOf<HTMLElement> {\n    return this.rootElement.querySelectorAll<HTMLElement>('input, [tabindex=\"0\"]');\n  }\n\n  get lastFocusableElement(): HTMLElement {\n    return this.focusableElements[this.focusableElements.length - 1];\n  }\n\n  get firstFocusableElement(): HTMLElement {\n    return this.focusableElements[0];\n  }\n\n  checkFocus(event: KeyboardEvent, referenceElement: HTMLElement, targetElement: HTMLElement) {\n    if (event.target === referenceElement) {\n      targetElement.focus();\n      event.preventDefault();\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Tab') {\n      this.checkFocus(\n        event,\n        event.shiftKey ? this.firstFocusableElement : this.lastFocusableElement,\n        event.shiftKey ? this.lastFocusableElement : this.firstFocusableElement\n      );\n    }\n  }\n}","import { getPrefixedClasses } from './util';\n\nconst {\n  light: lightTheme,\n  dark: darkTheme,\n  auto: autoTheme\n} = getPrefixedClasses('light', 'dark', 'auto');\n\nexport { lightTheme, darkTheme, autoTheme };\n","import { Template, TemplateData } from '../Template';\nimport { AppEvent, AppEventKey } from '../AppEvents';\nimport { Events, EventArgs, EventCallback, AsyncEventCallback } from '../events';\nimport { ViewFactory } from '../viewFactory';\nimport { Bundle } from '../i18n/bundle';\nimport { Renderer } from '../renderers/renderer';\nimport { DataStore } from '../data/DataStore';\nimport { EmojiRecord, PickerOptions } from '../types';\nimport { shouldAnimate } from '../util';\n\ntype UIEventListenerBinding = {\n  target?: string;\n  event: string;\n  handler: EventCallback;\n  options?: AddEventListenerOptions;\n};\n\ntype KeyBindings = Record<string, (KeyboardEvent?) => void>;\n\ntype AppEvents = {\n  [key in AppEvent]?: EventCallback | AsyncEventCallback;\n};\n\ntype ClassMappings = Record<string, string>;\ntype UIElementSelectors = Record<string, string>;\ntype UIElementMappings = Record<string, HTMLElement>;\n\ntype ViewOptions = {\n  template: Template;\n  classes?: ClassMappings;\n  parent?: HTMLElement;\n};\nexport abstract class View {\n  el: HTMLElement;\n  isDestroyed = false;\n\n  private template: Template;\n  private classes?: ClassMappings;\n\n  protected appEvents: AppEvents = {};\n  protected uiEvents: UIEventListenerBinding[] = [];\n  protected keyBindings: KeyBindings;\n  protected uiElements: UIElementSelectors = {};\n  protected emojiData: DataStore;\n  protected emojiDataPromise: Promise<DataStore>;\n  protected options: PickerOptions;\n  protected customEmojis: EmojiRecord[];\n\n  protected events: Events<AppEvent>;\n  protected i18n: Bundle;\n  protected renderer: Renderer;\n  protected pickerId: string;\n\n  protected parent?: HTMLElement;\n\n  viewFactory: ViewFactory;\n\n  ui: UIElementMappings = {};\n\n  constructor({ template, classes, parent }: ViewOptions) {\n    this.template = template;\n    this.classes = classes;\n    this.parent = parent;\n\n    this.keyBindingHandler = this.keyBindingHandler.bind(this);\n  }\n\n  initialize() {\n    this.bindAppEvents();\n  }\n\n  setCustomEmojis(customEmojis: EmojiRecord[]) {\n    this.customEmojis = customEmojis;\n  }\n\n  setEvents(events: Events<AppEvent>) {\n    this.events = events;\n  }\n\n  setPickerId(pickerId: string) {\n    this.pickerId = pickerId;\n  }\n\n  emit(event: AppEventKey, ...args: EventArgs) {\n    this.events.emit(event, ...args);\n  }\n\n  setI18n(i18n: Bundle) {\n    this.i18n = i18n;\n  }\n\n  setRenderer(renderer: Renderer) {\n    this.renderer = renderer;\n  }\n\n  setEmojiData(emojiDataPromise: Promise<DataStore>) {\n    this.emojiDataPromise = emojiDataPromise;\n    emojiDataPromise.then(emojiData => {\n      this.emojiData = emojiData;\n    });\n  }\n\n  updateEmojiData(emojiData: DataStore) {\n    this.emojiData = emojiData;\n    this.emojiDataPromise = Promise.resolve(emojiData);\n  }\n\n  setOptions(options: PickerOptions) {\n    this.options = options;\n  }\n\n  animateShow?: () => Promise<Animation | void | Animation[] | (Animation | void)[] >;\n\n  renderSync(templateData: TemplateData = {}): HTMLElement {\n    this.el = this.template.renderSync({\n      classes: this.classes,\n      i18n: this.i18n,\n      pickerId: this.pickerId,\n      ...templateData\n    }) as HTMLElement;\n\n    this.postRender();\n    return this.el;\n  }\n\n  async render(templateData: TemplateData = {}): Promise<HTMLElement> {\n    await this.emojiDataPromise;\n\n    this.el = await this.template.renderAsync({\n      classes: this.classes,\n      i18n: this.i18n,\n      pickerId: this.pickerId,\n      ...templateData\n    });\n    this.postRender();\n    return this.el;\n  }\n\n  private postRender() {\n    this.bindUIElements();\n    this.bindKeyBindings();\n    this.bindUIEvents();\n    this.scheduleShowAnimation();\n  }\n\n  private bindAppEvents() {\n    Object.keys(this.appEvents).forEach(event => {\n      this.events.on(event as AppEventKey, this.appEvents[event], this);\n    });\n\n    this.events.on('data:ready', this.updateEmojiData, this);\n  }\n\n  private unbindAppEvents() {\n    Object.keys(this.appEvents).forEach(event => {\n      this.events.off(event as AppEventKey, this.appEvents[event]);\n    });\n\n    this.events.off('data:ready', this.updateEmojiData);\n  }\n\n  private keyBindingHandler(event: KeyboardEvent) {\n    const handler = this.keyBindings[event.key];\n    if (handler) {\n      handler.call(this, event);\n    }\n  }\n\n  private bindKeyBindings() {\n    if (this.keyBindings) {\n      this.el.addEventListener('keydown', this.keyBindingHandler);\n    }\n  }\n\n  private unbindKeyBindings() {\n    if (this.keyBindings) {\n      this.el.removeEventListener('keydown', this.keyBindingHandler);\n    }\n  }\n\n  private bindUIElements() {\n    this.ui = Object.keys(this.uiElements).reduce((result, key) => ({\n      ...result,\n      [key]: this.el.querySelector<HTMLElement>(this.uiElements[key])\n    }), {});\n  }\n\n  private bindUIEvents() {\n    this.uiEvents.forEach((binding: UIEventListenerBinding) => {\n      binding.handler = binding.handler.bind(this);\n\n      const target = binding.target ? this.ui[binding.target] : this.el;\n      target.addEventListener(binding.event, binding.handler, binding.options);\n    });\n  }\n\n  private unbindUIEvents() {\n    this.uiEvents.forEach((binding: UIEventListenerBinding) => {\n      const target = binding.target ? this.ui[binding.target] : this.el;\n      target.removeEventListener(binding.event, binding.handler);\n    });\n  }\n\n  destroy() {\n    this.unbindAppEvents();\n    this.unbindUIEvents();\n    this.unbindKeyBindings();\n\n    this.el.remove();\n    this.isDestroyed = true;\n  }\n\n  private scheduleShowAnimation() {\n    if (this.parent) {\n      const observer = new MutationObserver(list => {\n        const [record] = list;\n        if (record.type === 'childList' && record.addedNodes[0] === this.el) {\n          if (shouldAnimate(this.options) && this.animateShow) {\n            this.animateShow();\n          }\n          observer.disconnect\n        }\n      });\n\n      observer.observe(this.parent as Node, { childList: true });\n    }\n  }\n\n  static childEvent(target: string, event: string, handler: EventCallback, options: AddEventListenerOptions = {}): UIEventListenerBinding {\n    return { target, event, handler, options };\n  }\n\n  static uiEvent(event: string, handler: EventCallback, options: AddEventListenerOptions = {}): UIEventListenerBinding {\n    return { event, handler, options };\n  }\n\n  static byClass(className: string): string {\n    return `.${className}`;\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512zM232 256C232 264 236 271.5 242.7 275.1L338.7 339.1C349.7 347.3 364.6 344.3 371.1 333.3C379.3 322.3 376.3 307.4 365.3 300L280 243.2V120C280 106.7 269.3 96 255.1 96C242.7 96 231.1 106.7 231.1 120L232 256z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M64 496C64 504.8 56.75 512 48 512h-32C7.25 512 0 504.8 0 496V32c0-17.75 14.25-32 32-32s32 14.25 32 32V496zM476.3 0c-6.365 0-13.01 1.35-19.34 4.233c-45.69 20.86-79.56 27.94-107.8 27.94c-59.96 0-94.81-31.86-163.9-31.87C160.9 .3055 131.6 4.867 96 15.75v350.5c32-9.984 59.87-14.1 84.85-14.1c73.63 0 124.9 31.78 198.6 31.78c31.91 0 68.02-5.971 111.1-23.09C504.1 355.9 512 344.4 512 332.1V30.73C512 11.1 495.3 0 476.3 0z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM176.4 240C194 240 208.4 225.7 208.4 208C208.4 190.3 194 176 176.4 176C158.7 176 144.4 190.3 144.4 208C144.4 225.7 158.7 240 176.4 240zM336.4 176C318.7 176 304.4 190.3 304.4 208C304.4 225.7 318.7 240 336.4 240C354 240 368.4 225.7 368.4 208C368.4 190.3 354 176 336.4 176zM259.9 369.4C288.8 369.4 316.2 375.2 340.6 385.5C352.9 390.7 366.7 381.3 361.4 369.1C344.8 330.9 305.6 303.1 259.9 303.1C214.3 303.1 175.1 330.8 158.4 369.1C153.1 381.3 166.1 390.6 179.3 385.4C203.7 375.1 231 369.4 259.9 369.4L259.9 369.4z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M448 64H192C85.96 64 0 149.1 0 256s85.96 192 192 192h256c106 0 192-85.96 192-192S554 64 448 64zM247.1 280h-32v32c0 13.2-10.78 24-23.98 24c-13.2 0-24.02-10.8-24.02-24v-32L136 279.1C122.8 279.1 111.1 269.2 111.1 256c0-13.2 10.85-24.01 24.05-24.01L167.1 232v-32c0-13.2 10.82-24 24.02-24c13.2 0 23.98 10.8 23.98 24v32h32c13.2 0 24.02 10.8 24.02 24C271.1 269.2 261.2 280 247.1 280zM431.1 344c-22.12 0-39.1-17.87-39.1-39.1s17.87-40 39.1-40s39.1 17.88 39.1 40S454.1 344 431.1 344zM495.1 248c-22.12 0-39.1-17.87-39.1-39.1s17.87-40 39.1-40c22.12 0 39.1 17.88 39.1 40S518.1 248 495.1 248z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 384 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M112.1 454.3c0 6.297 1.816 12.44 5.284 17.69l17.14 25.69c5.25 7.875 17.17 14.28 26.64 14.28h61.67c9.438 0 21.36-6.401 26.61-14.28l17.08-25.68c2.938-4.438 5.348-12.37 5.348-17.7L272 415.1h-160L112.1 454.3zM191.4 .0132C89.44 .3257 16 82.97 16 175.1c0 44.38 16.44 84.84 43.56 115.8c16.53 18.84 42.34 58.23 52.22 91.45c.0313 .25 .0938 .5166 .125 .7823h160.2c.0313-.2656 .0938-.5166 .125-.7823c9.875-33.22 35.69-72.61 52.22-91.45C351.6 260.8 368 220.4 368 175.1C368 78.61 288.9-.2837 191.4 .0132zM192 96.01c-44.13 0-80 35.89-80 79.1C112 184.8 104.8 192 96 192S80 184.8 80 176c0-61.76 50.25-111.1 112-111.1c8.844 0 16 7.159 16 16S200.8 96.01 192 96.01z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M512 32H120c-13.25 0-24 10.75-24 24L96.01 288c0 53 43 96 96 96h192C437 384 480 341 480 288h32c70.63 0 128-57.38 128-128S582.6 32 512 32zM512 224h-32V96h32c35.25 0 64 28.75 64 64S547.3 224 512 224zM560 416h-544C7.164 416 0 423.2 0 432C0 458.5 21.49 480 48 480h480c26.51 0 48-21.49 48-48C576 423.2 568.8 416 560 416z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 576 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M482.3 192C516.5 192 576 221 576 256C576 292 516.5 320 482.3 320H365.7L265.2 495.9C259.5 505.8 248.9 512 237.4 512H181.2C170.6 512 162.9 501.8 165.8 491.6L214.9 320H112L68.8 377.6C65.78 381.6 61.04 384 56 384H14.03C6.284 384 0 377.7 0 369.1C0 368.7 .1818 367.4 .5398 366.1L32 256L.5398 145.9C.1818 144.6 0 143.3 0 142C0 134.3 6.284 128 14.03 128H56C61.04 128 65.78 130.4 68.8 134.4L112 192H214.9L165.8 20.4C162.9 10.17 170.6 0 181.2 0H237.4C248.9 0 259.5 6.153 265.2 16.12L365.7 192H482.3z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M9.375 233.4C3.375 239.4 0 247.5 0 256v128c0 8.5 3.375 16.62 9.375 22.62S23.5 416 32 416h32V224H32C23.5 224 15.38 227.4 9.375 233.4zM464 96H352V32c0-17.62-14.38-32-32-32S288 14.38 288 32v64H176C131.8 96 96 131.8 96 176V448c0 35.38 28.62 64 64 64h320c35.38 0 64-28.62 64-64V176C544 131.8 508.3 96 464 96zM256 416H192v-32h64V416zM224 296C201.9 296 184 278.1 184 256S201.9 216 224 216S264 233.9 264 256S246.1 296 224 296zM352 416H288v-32h64V416zM448 416h-64v-32h64V416zM416 296c-22.12 0-40-17.88-40-40S393.9 216 416 216S456 233.9 456 256S438.1 296 416 296zM630.6 233.4C624.6 227.4 616.5 224 608 224h-32v192h32c8.5 0 16.62-3.375 22.62-9.375S640 392.5 640 384V256C640 247.5 636.6 239.4 630.6 233.4z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\">\\n  <defs>\\n    <radialGradient gradientUnits=\\\"userSpaceOnUse\\\" cy=\\\"10%\\\" id=\\\"gradient-0\\\">\\n      <stop offset=\\\"0\\\" stop-color=\\\"hsl(50, 100%, 50%)\\\" />\\n      <stop offset=\\\"1\\\" stop-color=\\\"hsl(50, 100%, 60%)\\\" />\\n    </radialGradient>\\n  </defs>\\n  <!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. -->\\n  <ellipse stroke=\\\"#000\\\" fill=\\\"rgba(0, 0, 0, 0.6)\\\" cx=\\\"172.586\\\" cy=\\\"207.006\\\" rx=\\\"39.974\\\" ry=\\\"39.974\\\"/>\\n  <ellipse stroke=\\\"#000\\\" fill=\\\"rgba(0, 0, 0, 0.6)\\\" cx=\\\"334.523\\\" cy=\\\"207.481\\\" rx=\\\"39.974\\\" ry=\\\"39.974\\\"/>\\n  <ellipse stroke=\\\"#000\\\" fill=\\\"rgba(0, 0, 0, 0.6)\\\" cx=\\\"313.325\\\" cy=\\\"356.208\\\" rx=\\\"91.497\\\" ry=\\\"59.893\\\"/>\\n  <path fill=\\\"#55a7ff\\\" d=\\\"M 159.427 274.06 L 102.158 363.286 L 124.366 417.011 L 160.476 423.338 L 196.937 414.736 L 218.502 375.214\\\"></path>\\n  <path fill=\\\"url(#gradient-0)\\\" d=\\\"M256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0zM256 352C290.9 352 323.2 367.8 348.3 394.9C354.3 401.4 364.4 401.7 370.9 395.7C377.4 389.7 377.7 379.6 371.7 373.1C341.6 340.5 301 320 256 320C247.2 320 240 327.2 240 336C240 344.8 247.2 352 256 352H256zM208 369C208 349 179.6 308.6 166.4 291.3C163.2 286.9 156.8 286.9 153.6 291.3C140.6 308.6 112 349 112 369C112 395 133.5 416 160 416C186.5 416 208 395 208 369H208zM303.6 208C303.6 225.7 317.1 240 335.6 240C353.3 240 367.6 225.7 367.6 208C367.6 190.3 353.3 176 335.6 176C317.1 176 303.6 190.3 303.6 208zM207.6 208C207.6 190.3 193.3 176 175.6 176C157.1 176 143.6 190.3 143.6 208C143.6 225.7 157.1 240 175.6 240C193.3 240 207.6 225.7 207.6 208z\\\" />\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M500.3 443.7l-119.7-119.7c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723C99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9c53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0C515.9 484.7 515.9 459.3 500.3 443.7zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128c0 70.58-57.42 128-128 128S79.1 278.6 79.1 208z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256zM256.3 331.8C208.9 331.8 164.1 324.9 124.5 312.8C112.2 309 100.2 319.7 105.2 331.5C130.1 390.6 188.4 432 256.3 432C324.2 432 382.4 390.6 407.4 331.5C412.4 319.7 400.4 309 388.1 312.8C348.4 324.9 303.7 331.8 256.3 331.8H256.3zM176.4 176C158.7 176 144.4 190.3 144.4 208C144.4 225.7 158.7 240 176.4 240C194 240 208.4 225.7 208.4 208C208.4 190.3 194 176 176.4 176zM336.4 240C354 240 368.4 225.7 368.4 208C368.4 190.3 354 176 336.4 176C318.7 176 304.4 190.3 304.4 208C304.4 225.7 318.7 240 336.4 240z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M500.3 7.251C507.7 13.33 512 22.41 512 31.1V175.1C512 202.5 483.3 223.1 447.1 223.1C412.7 223.1 383.1 202.5 383.1 175.1C383.1 149.5 412.7 127.1 447.1 127.1V71.03L351.1 90.23V207.1C351.1 234.5 323.3 255.1 287.1 255.1C252.7 255.1 223.1 234.5 223.1 207.1C223.1 181.5 252.7 159.1 287.1 159.1V63.1C287.1 48.74 298.8 35.61 313.7 32.62L473.7 .6198C483.1-1.261 492.9 1.173 500.3 7.251H500.3zM74.66 303.1L86.5 286.2C92.43 277.3 102.4 271.1 113.1 271.1H174.9C185.6 271.1 195.6 277.3 201.5 286.2L213.3 303.1H239.1C266.5 303.1 287.1 325.5 287.1 351.1V463.1C287.1 490.5 266.5 511.1 239.1 511.1H47.1C21.49 511.1-.0019 490.5-.0019 463.1V351.1C-.0019 325.5 21.49 303.1 47.1 303.1H74.66zM143.1 359.1C117.5 359.1 95.1 381.5 95.1 407.1C95.1 434.5 117.5 455.1 143.1 455.1C170.5 455.1 191.1 434.5 191.1 407.1C191.1 381.5 170.5 359.1 143.1 359.1zM440.3 367.1H496C502.7 367.1 508.6 372.1 510.1 378.4C513.3 384.6 511.6 391.7 506.5 396L378.5 508C372.9 512.1 364.6 513.3 358.6 508.9C352.6 504.6 350.3 496.6 353.3 489.7L391.7 399.1H336C329.3 399.1 323.4 395.9 321 389.6C318.7 383.4 320.4 376.3 325.5 371.1L453.5 259.1C459.1 255 467.4 254.7 473.4 259.1C479.4 263.4 481.6 271.4 478.7 278.3L440.3 367.1zM116.7 219.1L19.85 119.2C-8.112 90.26-6.614 42.31 24.85 15.34C51.82-8.137 93.26-3.642 118.2 21.83L128.2 32.32L137.7 21.83C162.7-3.642 203.6-8.137 231.6 15.34C262.6 42.31 264.1 90.26 236.1 119.2L139.7 219.1C133.2 225.6 122.7 225.6 116.7 219.1H116.7z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 448 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M413.8 447.1L256 448l0 31.99C256 497.7 241.8 512 224.1 512c-17.67 0-32.1-14.32-32.1-31.99l0-31.99l-158.9-.0099c-28.5 0-43.69-34.49-24.69-56.4l68.98-79.59H62.22c-25.41 0-39.15-29.8-22.67-49.13l60.41-70.85H89.21c-21.28 0-32.87-22.5-19.28-37.31l134.8-146.5c10.4-11.3 28.22-11.3 38.62-.0033l134.9 146.5c13.62 14.81 2.001 37.31-19.28 37.31h-10.77l60.35 70.86c16.46 19.34 2.716 49.12-22.68 49.12h-15.2l68.98 79.59C458.7 413.7 443.1 447.1 413.8 447.1z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 640 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3c-95.73 0-173.3 77.6-173.3 173.3C0 496.5 15.52 512 34.66 512H413.3C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM479.1 320h-73.85C451.2 357.7 480 414.1 480 477.3C480 490.1 476.2 501.9 470 512h138C625.7 512 640 497.6 640 479.1C640 391.6 568.4 320 479.1 320zM432 256C493.9 256 544 205.9 544 144S493.9 32 432 32c-25.11 0-48.04 8.555-66.72 22.51C376.8 76.63 384 101.4 384 128c0 35.52-11.93 68.14-31.59 94.71C372.7 243.2 400.8 256 432 256z\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\">\\n  <defs>\\n    <radialGradient id=\\\"radial\\\" cy=\\\"85%\\\">\\n      <stop offset=\\\"20%\\\" stop-color=\\\"var(--color-secondary)\\\" />\\n      <stop offset=\\\"100%\\\" stop-color=\\\"var(--color-primary)\\\" />\\n    </radialGradient>\\n  </defs>\\n  <!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. -->\\n  <path fill=\\\"url('#radial')\\\" d=\\\"M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z\\\" />\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 320 512\\\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\\\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\\\"/></svg>\"","import { prefixClassName, toElement } from '../util';\nimport { CategoryKey } from '../types';\n\nimport clock from './clock-solid.svg?raw';\nimport flag from './flag-solid.svg?raw';\nimport frown from './face-frown-open-solid.svg?raw';\nimport gamepad from './gamepad-solid.svg?raw';\nimport lightbulb from './lightbulb-solid.svg?raw';\nimport mug from './mug-saucer-solid.svg?raw';\nimport plane from './plane-solid.svg?raw';\nimport robot from './robot-solid.svg?raw';\nimport sad from './face-sad-tear-solid.svg?raw';\nimport search from './magnifying-glass-solid.svg?raw';\nimport smiley from './face-grin-solid.svg?raw';\nimport symbols from './icons-solid.svg?raw';\nimport tree from './tree-solid.svg?raw';\nimport users from './user-group-solid.svg?raw';\nimport warning from './triangle-exclamation-solid.svg?raw';\nimport xmark from './xmark-solid.svg?raw';\n\nfunction createIcon(iconName: string, svg: string): SVGElement {\n  const el = toElement<SVGSVGElement>(svg);\n  el.dataset.icon = iconName;\n  el.classList.add(prefixClassName('icon'));\n  return el;\n}\n\nexport type IconSize = 'small' | 'medium' | 'large' | '2x' | '3x' | '4x' | '5x';\n\nconst icons = {\n  clock, \n  flag,\n  frown,\n  gamepad, \n  lightbulb, \n  mug, \n  plane, \n  robot, \n  sad,\n  search,\n  smiley, \n  symbols, \n  tree,\n  users, \n  warning, \n  xmark,\n};\n\nexport { icons };\n\nexport const categoryIcons: Record<CategoryKey, string> = {\n  'recents': 'clock',\n  'smileys-emotion': 'smiley',\n  'people-body': 'users',\n  'animals-nature': 'tree',\n  'food-drink': 'mug',\n  'activities': 'gamepad',\n  'travel-places': 'plane',\n  'objects': 'lightbulb',\n  'symbols': 'symbols',\n  'flags': 'flag',\n  'custom': 'robot'\n};\n\nexport function icon(name: string, size?: IconSize): Element {\n  if (!(name in icons)) {\n    console.warn(`Unknown icon: \"${name}\"`);\n    return document.createElement('div');\n  }\n\n  const icon = createIcon(name, icons[name]);\n  if (size) {\n    icon.classList.add(prefixClassName(`icon-${size}`));\n  }\n\n  return icon;\n}\n","import { icon, IconSize } from './icons';\nimport { View } from './views/view';\nimport { toElement } from './util';\n\nexport type TemplateData = Record<string, any>;\ntype ViewData = Record<string, View>;\n\ntype RenderMode = 'sync' | 'async';\n\ntype TemplateOptions = {\n  mode: RenderMode;\n}\n\nconst defaultOptions: TemplateOptions = {\n  mode: 'sync'\n};\n\nexport class Template<E extends HTMLElement = HTMLElement> {\n  #templateFn: (TemplateData) => string;\n  #mode: RenderMode;\n\n  constructor(templateFn: (TemplateData) => string, options: Partial<TemplateOptions> = {}) {\n    this.#templateFn = templateFn;\n    this.#mode = options.mode || defaultOptions.mode;\n  }\n\n  renderSync(data: TemplateData = {}): E {\n    const result = toElement<E>(this.#templateFn(data));\n    this.#bindPlaceholders(result, data);\n    this.#bindIcons(result);\n    this.#renderChildViews(result, data);\n    return result;\n  }\n\n  async renderAsync(data: TemplateData = {}): Promise<E> {\n    const result = toElement<E>(this.#templateFn(data));\n    this.#bindPlaceholders(result, data);\n    this.#bindIcons(result);\n    await this.#renderChildViews(result, data);\n    return result;\n  }\n\n  render(data: TemplateData): E | Promise<E> {\n    return this.#mode === 'sync' ? this.renderSync(data) : this.renderAsync(data);\n  }\n\n  async #renderChildViews(result: E, data: ViewData) {\n    const placeholders = result.querySelectorAll<HTMLElement>('[data-view]');\n\n    const asyncViews: Promise<HTMLElement>[] = [];\n\n    for (const placeholder of placeholders) {\n      const view = data[placeholder.dataset.view as string];\n      if (view) {\n        if (placeholder.dataset.render !== 'sync') {\n          asyncViews.push(view.render().then(result => {\n            placeholder.replaceWith(result);\n            return result;\n          }));\n        } else {\n          placeholder.replaceWith(view.renderSync());\n        }\n      } else {\n        placeholder.remove();\n      }\n    }\n\n    return Promise.all(asyncViews);\n  }\n\n  #bindIcons(result: E) {\n    const icons = result.querySelectorAll<HTMLElement>('i[data-icon]');\n    icons.forEach((placeholder: HTMLElement) => {\n      const { icon: iconKey, size } = placeholder.dataset;\n      placeholder.replaceWith(icon(iconKey as string, size as IconSize));\n    })\n  }\n\n  #bindPlaceholders(result: E, data: TemplateData): E {\n    const placeholders = result.querySelectorAll<HTMLElement>('[data-placeholder]');\n    \n    placeholders.forEach((placeholder: HTMLElement) => {\n      const key = placeholder.dataset.placeholder;\n\n      if (key && data[key]) {\n        const replacement = data[key];\n        placeholder.replaceWith(...[replacement].flat());\n      } else {\n        console.warn(`Missing placeholder element for key \"${key}\"`);\n      }\n    });\n\n    return result;\n  }\n}\n","import { View } from './view';\nimport { Template } from '../Template';\nimport { getPrefixedClasses } from '../util';\n\nconst classes = getPrefixedClasses(\n  'imagePlaceholder',\n  'placeholder'\n);\n\nconst template = new Template(({ classes }) => /* html */`\n  <div class=\"${classes.placeholder} ${classes.imagePlaceholder}\"></div>\n`);\n\ntype ImageOptions = {\n  classNames?: string;\n};\n\nexport class Image extends View {\n  private classNames?: string;\n\n  constructor({ classNames }: ImageOptions = {}) {\n    super({ template, classes });\n    this.classNames = classNames;\n  }\n\n  load(src: string | Promise<string>) {\n    const img = document.createElement('img');\n    if (this.classNames) {\n      img.className = this.classNames;\n    }\n\n    img.addEventListener('load', () => {\n      this.el.replaceWith(img);\n    }, { once: true });\n\n    Promise.resolve(src).then(src => img.src = src);\n  }\n\n  renderSync() {\n    super.renderSync();\n    if (this.classNames) {\n      const classNames = this.classNames.split(' ');\n      classNames.forEach(className => this.el.classList.add(className));\n    }\n\n    return this.el;\n  }\n}\n","import { LazyLoader } from '../LazyLoader';\nimport { CustomEmoji, EmojiRecord, EmojiSelection } from '../types';\nimport { View } from '../views/view';\nimport { Image } from '../views/Image';\nimport { getPrefixedClasses } from '../util';\n\nconst classes = getPrefixedClasses('customEmoji');\n\nexport type RenderTask = {\n  content: View | Element;\n  resolver?: () => Element;\n}\n\nexport abstract class Renderer {\n  abstract render(emoji: EmojiRecord, classNames?: string): RenderTask;\n  abstract emit(emoji: EmojiRecord): EmojiSelection | Promise<EmojiSelection>;\n\n  renderElement(content: Element): RenderTask {\n    return { content };\n  }\n\n  renderImage(classNames = '', urlResolver: () => string | Promise<string>): RenderTask {\n    const image = new Image({ classNames });\n    image.renderSync();\n\n    const resolver = () => {\n      image.load(urlResolver());\n      return image.el;\n    }\n\n    return { content: image, resolver };\n  }\n\n  doRender(emoji: EmojiRecord, lazyLoader?: LazyLoader, classNames?: string): Element {\n    if (emoji.custom) {\n      return this.renderCustom(emoji as CustomEmoji, lazyLoader, classNames);\n    }\n\n    const { content, resolver } = this.render(emoji, classNames);\n    const contentElement = content instanceof Element ? content : content.el;\n\n    // if (lazyLoader && resolver) {\n    //   return lazyLoader.lazyLoad(contentElement, resolver)\n    // }\n\n    if (resolver) {\n      resolver();\n    }\n    return contentElement;\n  }\n\n  doEmit(emoji: EmojiRecord): EmojiSelection | Promise<EmojiSelection> {\n    if (emoji.custom) {\n      return this.emitCustom(emoji as CustomEmoji);\n    }\n\n    return this.emit(emoji);\n  }\n\n  emitCustom({ url, label, emoji, data }: CustomEmoji): EmojiSelection {\n    return { url, label, emoji, data };\n  }\n\n  renderCustom(emoji: CustomEmoji, lazyLoader?: LazyLoader, additionalClasses = ''): Element {\n    const classNames = [classes.customEmoji, additionalClasses].join(' ').trim();\n\n    const { content, resolver } = this.renderImage(classNames, () => emoji.url);\n    const contentElement = content instanceof Element ? content : content.el;\n\n    if (resolver) {\n      resolver();\n    }\n\n    return contentElement;\n  }\n}\n","import { Renderer } from './renderer';\nimport { EmojiRecord, EmojiSelection } from '../types';\nimport { Template } from '../Template';\n\nconst template = new Template(({ emoji }) => /* html */ `<span>${emoji}</span>`);\n\nexport class NativeRenderer extends Renderer {\n  render(emoji: EmojiRecord) {\n    return this.renderElement(template.renderSync({ emoji: emoji.emoji }));\n  }\n\n  emit({ emoji, hexcode, label }: EmojiRecord): EmojiSelection {\n    return { emoji, hexcode, label };\n  }\n}\n","export default {\n  'categories.activities': 'Activities',\n  'categories.animals-nature': 'Animals & Nature',\n  'categories.custom': 'Custom',\n  'categories.flags': 'Flags',\n  'categories.food-drink': 'Food & Drink',\n  'categories.objects': 'Objects',\n  'categories.people-body': 'People & Body',\n  'categories.recents': 'Recently Used',\n  'categories.smileys-emotion': 'Smileys & Emotion',\n  'categories.symbols': 'Symbols',\n  'categories.travel-places': 'Travel & Places',\n  'error.load': 'Failed to load emojis',\n  'recents.clear': 'Clear recent emojis',\n  'recents.none': 'You haven\\'t selected any emojis yet.',\n  'retry': 'Try again',\n  'search.clear': 'Clear search',\n  'search.error': 'Failed to search emojis',\n  'search.notFound': 'No results found',\n  'search': 'Search emojis...'\n};\n","import { GroupMessage, Emoji, Locale } from 'emojibase';\nimport { PickerOptions, EmojiRecord, Category, CategoryKey } from '../types';\nimport { applyRules } from '../rules';\nimport { queryMatches, getEmojiRecord, DataStore } from './DataStore';\n\n// Base database name. It will have the locale appended to it.\nconst DATABASE_NAME = 'PicMo';\n\nexport function IndexedDbStoreFactory(locale: Locale): DataStore {\n  return new IndexedDbStore(locale);\n}\n\nIndexedDbStoreFactory.deleteDatabase = (locale: Locale) => {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.deleteDatabase(`${DATABASE_NAME}-${locale}`);\n    request.addEventListener('success', resolve);\n    request.addEventListener('error', reject);\n  });\n};\n\nexport class IndexedDbStore extends DataStore {\n  private db: IDBDatabase;\n\n  /**\n   * Creates/opens the database.\n   *\n   * There are three data stores:\n   *\n   * - category: stores the categories\n   * - emoji: stores the emoji data itself\n   * - meta: stores metadata such as the ETags\n   *\n   * @returns a Promise that resolves when the database is ready\n   */\n  async open(): Promise<void> {\n    const request = indexedDB.open(`${DATABASE_NAME}-${this.locale}`);\n\n    return new Promise((resolve, reject) => {\n      request.addEventListener('success', (event: any) => {\n        this.db = event.target?.result;\n        resolve();\n      });\n\n      request.addEventListener('error', reject);\n\n      request.addEventListener('upgradeneeded', async (event: any) => {\n        this.db = event.target?.result;\n\n        this.db.createObjectStore('category', { keyPath: 'order' });\n\n        const emojiStore = this.db.createObjectStore('emoji', { keyPath: 'emoji' });\n        emojiStore.createIndex('category', 'group');\n        emojiStore.createIndex('version', 'version');\n\n        this.db.createObjectStore('meta');\n      });\n    });\n  }\n\n  async delete() {\n    this.close();\n    const request = indexedDB.deleteDatabase(`${DATABASE_NAME}-${this.locale}`);\n    await this.waitForRequest(request);\n  }\n\n  close() {\n    this.db.close();\n  }\n\n  async getEmojiCount(): Promise<number> {\n    const transaction = this.db.transaction('emoji', 'readonly');\n    const store = transaction.objectStore('emoji');\n    const result = await this.waitForRequest(store.count());\n    return result.target.result;\n  }\n\n  /**\n   * Gets the ETags stored in the meta datastore.\n   * @returns a Promise that resolves to the ETag data\n   */\n  async getEtags(): Promise<Record<string, string | undefined>> {\n    const transaction = this.db.transaction('meta', 'readonly');\n    const store = transaction.objectStore('meta');\n    const [emojisEtag, messagesEtag] = await Promise.all([\n      this.waitForRequest(store.get('emojisEtag')),\n      this.waitForRequest(store.get('messagesEtag'))\n    ]);\n\n    return {\n      storedEmojisEtag: emojisEtag.target.result,\n      storedMessagesEtag: messagesEtag.target.result\n    };\n  }\n\n  /**\n   * Stores ETag values for the emoji and message data.\n   * @param emojisEtag the ETag for the emoji data\n   * @param messagesEtag the ETag for the message data\n   */\n  async setMeta(meta) {\n    const transaction = this.db.transaction('meta', 'readwrite');\n    const store = transaction.objectStore('meta');\n\n    return new Promise(resolve => {\n      transaction.oncomplete = resolve;\n\n      const properties = Object.keys(meta).filter(Boolean);\n      properties.forEach(property => {\n        store.put(meta[property], property);\n      });\n    });\n  }\n\n  async getHash() {\n    const transaction = this.db.transaction('meta', 'readonly');\n    const store = transaction.objectStore('meta');\n    const result = await this.waitForRequest(store.get('hash'));\n    return result.target.result;\n  }\n\n  /**\n   * Determines whether or not the database is populated.\n   *\n   * @returns a Promise that resolves to a boolean indicating the populated state\n   */\n  async isPopulated(): Promise<boolean> {\n    const transaction = this.db.transaction('category', 'readonly');\n    const store = transaction.objectStore('category');\n    const categoryCountResult = await this.waitForRequest(store.count());\n    const categoryCount = categoryCountResult.target.result;\n    return categoryCount > 0;\n  }\n\n  /**\n   * Removes any current data and re-populates the data stores with the given data.\n   *\n   * @param groups the group message data\n   * @param emojis the emoji data\n   * @param emojisEtag the emoji data ETag\n   * @param messagesEtag the message data ETag\n   * @returns a Promise that resolves when all data has been written\n   */\n  async populate({\n    groups,\n    emojis,\n    emojisEtag,\n    messagesEtag,\n    hash\n  }: {\n    groups: GroupMessage[];\n    emojis: Emoji[];\n    emojisEtag?: string | null;\n    messagesEtag?: string | null;\n    hash?: string | null;\n  }) {\n    // Wipe out any old data first\n    await this.removeAllObjects('category', 'emoji');\n\n    const tasks = [\n      this.addObjects('category', groups),\n      this.addObjects('emoji', emojis),\n      this.setMeta({ emojisEtag, messagesEtag, hash })\n    ];\n\n    await Promise.all(tasks);\n  }\n\n  /**\n   * Gets the emoji categories.\n   *\n   * If an include list is specified, only those categories will be returned - and will be in the same sort order.\n   * Otherwise, all categories (except 'component') are returned.\n   *\n   * @param include an array of CategoryKeys to include\n   * @returns an arrya of all categories, or only the ones specified if include is given\n   */\n  async getCategories(options: PickerOptions): Promise<Category[]> {\n    const transaction = this.db.transaction('category', 'readonly');\n    const categoryStore = transaction.objectStore('category');\n    const result = await this.waitForRequest(categoryStore.getAll());\n    let categories = result.target.result.filter(category => category.key !== 'component');\n\n    if (options.showRecents) {\n      categories.unshift({ key: 'recents', order: -1 });\n    }\n\n    if (options.custom?.length) {\n      categories.push({ key: 'custom', order: 10 });\n    }\n\n    if (options.categories) {\n      const includeList = options.categories as CategoryKey[];\n      categories = categories.filter(category => includeList.includes(category.key));\n      categories.sort((a: Category, b: Category) => includeList.indexOf(a.key) - includeList.indexOf(b.key));\n    } else {\n      categories.sort((a: Category, b: Category) => a.order - b.order);\n    }\n\n    return categories;\n  }\n\n  /**\n   * Gets all emojis for a particular category and emoji version.\n   *\n   * @param category the category to get emojis for\n   * @param emojiVersion the maximum version for returned emojis\n   * @returns a Promise that resolves to an array of the EmojiRecord data\n   */\n  async getEmojis(category: Category, emojiVersion: number): Promise<EmojiRecord[]> {\n    const transaction = this.db.transaction('emoji', 'readonly');\n    const emojiStore = transaction.objectStore('emoji');\n    const groupsIndex = emojiStore.index('category');\n    const result = await this.waitForRequest(groupsIndex.getAll(category.order));\n    const emojis = result.target.result as Emoji[];\n    const records = emojis\n      .filter((e: Emoji) => e.version <= emojiVersion)\n      .sort((a: Emoji, b: Emoji) => {\n        if (a.order != null && b.order != null) {\n          return a.order - b.order;\n        }\n\n        return 0;\n      })\n      .map(getEmojiRecord);\n\n    return applyRules(records, emojiVersion);\n  }\n\n  /**\n   * Searches the database for emojis.\n   *\n   * @param query the text query\n   * @param customEmojis the custom emojis\n   * @param emojiVersion the maximum emoji version for search results\n   * @param categories the categories to search\n   * @returns a Promise that resolves to the matching EmojiRecords\n   */\n  async searchEmojis(\n    query: string,\n    customEmojis: EmojiRecord[],\n    emojiVersion: number,\n    categories: Category[]\n  ): Promise<EmojiRecord[]> {\n    const results: EmojiRecord[] = [];\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction('emoji', 'readonly');\n      const emojiStore = transaction.objectStore('emoji');\n      const request = emojiStore.openCursor();\n\n      request.addEventListener('success', (event: any) => {\n        const cursor: IDBCursorWithValue = event.target?.result;\n        if (!cursor) {\n          return resolve([\n            // matching emojis from the database\n            ...applyRules(results, emojiVersion),\n\n            // matching custom emojis\n            ...customEmojis.filter(emoji => queryMatches(emoji, query))\n          ]);\n        }\n\n        const emoji = cursor.value as Emoji;\n        if (queryMatches(emoji, query, categories) && emoji.version <= emojiVersion) {\n          results.push(getEmojiRecord(emoji));\n        }\n\n        cursor.continue();\n      });\n\n      request.addEventListener('error', (error: Event) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Waits for a request to complete.\n   *\n   * @param request the request\n   * @returns a Promise that resolves when the request succeeds, or rejects if it fails\n   */\n  async waitForRequest(request: IDBRequest): Promise<any> {\n    return new Promise((resolve, reject) => {\n      request.onsuccess = resolve;\n      request.onerror = reject;\n    });\n  }\n\n  /**\n   * Wraps an operation in an IndexedDB transaction.\n   *\n   * @param storeName the data store(s) to use\n   * @param mode the transaction mode\n   * @param callback a callback containing the work to do in the transaction\n   * @returns a Promise that resolves when the transaction completes, or rejects if it fails\n   */\n  protected withTransaction(\n    storeName: string | string[],\n    mode: IDBTransactionMode = 'readwrite',\n    callback: (transaction: IDBTransaction) => void\n  ) {\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction(storeName, mode);\n      transaction.oncomplete = resolve;\n      transaction.onerror = reject;\n\n      callback(transaction);\n    });\n  }\n\n  /**\n   * Removes all entries from one or more stores.\n   * @param storeNames the stores to clear\n   * @return a Promise that resolves when the clear is complete\n   */\n  protected async removeAllObjects(...storeNames: string[]) {\n    const transaction = this.db.transaction(storeNames, 'readwrite');\n    const stores = storeNames.map(storeName => transaction.objectStore(storeName));\n    await Promise.all(stores.map(store => this.waitForRequest(store.clear())));\n  }\n\n  /**\n   * Adds a collection of objects to a data store.\n   *\n   * @param storeName the store to populate\n   * @param objects the objects to add\n   * @returns a Promise that resolves when the add is complete, or rejects if it fails\n   */\n  protected async addObjects(storeName: string, objects: any[]) {\n    return this.withTransaction(storeName, 'readwrite', transaction => {\n      const store = transaction.objectStore(storeName);\n      objects.forEach(object => {\n        store.add(object);\n      });\n    });\n  }\n}\n","// A super basic in-memory WebStorage emulation. This is required in\n// some environments where localStorage/sessionStorage are not allowed.\nexport function createStorage(): Storage {\n  let data = {};\n\n  return {\n    getItem: key => data[key],\n    setItem: (key, value) => data[key] = value,\n    length: Object.keys(data).length,\n    clear: () => data = {},\n    key: index => Object.keys(data)[index],\n    removeItem: key => delete data[key]\n  };\n}","import { EmojiRecord } from '../types';\n\nexport abstract class RecentsProvider {\n  abstract clear(): void;\n  abstract getRecents(maxCount: number): Array<EmojiRecord>;\n  abstract addOrUpdateRecent(emoji: EmojiRecord, maxCount: number): void;\n}\n","import { EmojiRecord } from '../types';\nimport { RecentsProvider } from './RecentsProvider';\n\nconst STORAGE_KEY = 'PicMo:recents';\n\nexport abstract class WebStorageProvider extends RecentsProvider {\n     storage: Storage;\n\n  constructor(storage: Storage) {\n    super();\n    this.storage = storage;\n  }\n\n  clear(): void {\n    this.storage.removeItem(STORAGE_KEY);\n  }\n\n  getRecents(maxCount: number): Array<EmojiRecord> {\n    try {\n      const recents = JSON.parse(this.storage.getItem(STORAGE_KEY) ?? '[]');\n      return recents.slice(0, maxCount);\n    } catch (error) { // storage is not available, no recents\n      return [];\n    }\n  }\n\n  addOrUpdateRecent(emoji: EmojiRecord, maxCount: number) {\n    // Add the new recent to the beginning of the list, removing it if it exists already\n    const recents = [\n      emoji,\n      ...this.getRecents(maxCount).filter(recent => recent.hexcode !== emoji.hexcode)\n    ].slice(0, maxCount);\n    \n    try {\n      this.storage.setItem(STORAGE_KEY, JSON.stringify(recents));\n    } catch (error) {\n      console.warn('storage is not available, recent emojis will not be saved');\n    }\n  }\n}\n","import { isLocalStorageAvailable } from '../util';\nimport { createStorage } from '../webStorageShim';\nimport { WebStorageProvider } from './WebStorageProvider';\n\nexport class LocalStorageProvider extends WebStorageProvider {\n  constructor() {\n    super(isLocalStorageAvailable() ? localStorage : createStorage());\n  }\n}\n","import { PickerOptions } from './types';\nimport { lightTheme } from './themes';\nimport { NativeRenderer } from './renderers/native';\nimport en from './i18n/lang-en';\nimport { IndexedDbStoreFactory } from './data/IndexedDbStore';\nimport { LocalStorageProvider } from './recents/LocalStorageProvider';\n\nconst defaultOptions: Partial<PickerOptions> = {\n  dataStore: IndexedDbStoreFactory,\n  theme: lightTheme,\n\n  animate: true,\n\n  showCategoryTabs: true,\n  showPreview: true,\n  showRecents: true,\n  showSearch: true,\n  showVariants: true,\n\n  emojisPerRow: 8,\n  visibleRows: 6,\n\n  emojiVersion: 'auto',\n  i18n: en,\n  locale: 'en',\n\n  maxRecents: 50,\n\n  custom: []\n};\n\nexport function getOptions(options: Partial<PickerOptions> = {}): PickerOptions {\n  return { \n    ...defaultOptions,\n    ...options,\n    renderer: options.renderer || new NativeRenderer(),\n    recentsProvider: options.recentsProvider || new LocalStorageProvider()\n  } as PickerOptions;\n}\n","export type AsyncEventCallback = (...args: any[]) => Promise<void>;\nexport type EventCallback = (...args: any[]) => void;\nexport type EventArgs = any[];\n\nexport type EventKey<T> = Extract<T, string>;\n\nexport type EventBinding = {\n  context?: any;\n  handler: EventCallback;\n  once?: boolean;\n};\n\nexport type EventHandlerRecord<T> = {\n  event: EventKey<T>;\n  handler: EventCallback;\n};\n\nexport class Events<T> {\n  #events: Map<string, EventBinding[]> = new Map();\n  \n  #getBindings(event: EventKey<T>): EventBinding[] {\n    if (!this.#events.has(event)) {\n      this.#events.set(event, []);\n    }\n\n    return this.#events.get(event) as EventBinding[];\n  }\n\n  #addListener(event: EventKey<T>, handler: EventCallback, context?: any, once = false) {\n    const bindings = this.#getBindings(event);\n    bindings.push({ context, handler, once });\n  }\n\n  on(event: EventKey<T>, handler: EventCallback, context?: any) {\n    this.#addListener(event, handler, context);\n  }\n\n  once(event: EventKey<T>, handler: EventCallback, context?: any) {\n    this.#addListener(event, handler, context, true);\n  }\n\n  off(event: EventKey<T>, handler: EventCallback) {\n    const bindings = this.#getBindings(event);\n    this.#events.set(event, bindings.filter(h => h.handler !== handler));\n  }\n\n  emit(event: EventKey<T>, ...args: EventArgs) {\n    const bindings = this.#getBindings(event);\n    bindings.forEach((binding: EventBinding) => {\n      binding.handler.apply(binding.context, args);\n      if (binding.once) {\n        this.off(event, binding.handler);\n      }\n    });\n  }\n\n  removeAll() {\n    this.#events.clear();\n  }\n}\n","export default {\n  injectStyles: true\n};\n","import { Events, EventKey } from './events';\n\nexport type AppEvent =\n  | 'data:ready'\n  | 'error'\n  | 'reinitialize'\n  | 'emoji:select'\n  | 'content:show'\n  | 'preview:show'\n  | 'preview:hide'\n  | 'variantPopup:hide'\n  | 'category:select'\n  | 'category:next'\n  | 'category:previous'\n  | 'recent:add'\n  | 'focus:change';\n\nexport type AppEventKey = EventKey<AppEvent>;\n\nexport class AppEvents extends Events<AppEvent> {}\n","import { Events, EventKey } from './events';\n\nexport type ExternalEvent = \n  'emoji:select' |\n  'data:ready';\n\nexport type ExternalEventKey = EventKey<ExternalEvent>;\n\nexport class ExternalEvents extends Events<ExternalEvent> {}\n","import { View } from './view';\nimport { Template } from '../Template';\nimport { EmojiContainer } from './EmojiContainer';\nimport { Category, EmojiFocusTarget } from '../types';\nimport { LazyLoader } from '../LazyLoader';\nimport { getPrefixedClasses } from '../util';\n\ntype BaseEmojiCategoryOptions = {\n  category: Category;\n  showVariants: boolean;\n  lazyLoader?: LazyLoader;\n  template: Template;\n}\n\nexport const classes = getPrefixedClasses(\n  'emojiCategory',\n  'categoryName',\n  'noRecents',\n  'recentEmojis'\n);\n\nexport abstract class BaseEmojiCategory extends View {\n  category: Category;\n  protected showVariants: boolean;\n  protected lazyLoader?: LazyLoader;\n  protected emojiContainer: EmojiContainer;\n\n  protected baseUIElements = {\n    categoryName: View.byClass(classes.categoryName)\n  }\n\n  setActive(active: boolean, focusTarget?: EmojiFocusTarget, performFocus?: boolean) {\n    this.emojiContainer.setActive(active, focusTarget, performFocus);\n  }\n\n  constructor({ template, category, showVariants, lazyLoader }: BaseEmojiCategoryOptions) {\n    super({ template, classes });\n\n    this.category = category;\n    this.showVariants = showVariants;\n    this.lazyLoader = lazyLoader;\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes, emoji }) => /* html */`\n  <button\n    type=\"button\"\n    class=\"${classes.emojiButton}\"\n    title=\"${emoji.label}\"\n    data-emoji=\"${emoji.emoji}\"\n    tabindex=\"-1\">\n    <div data-placeholder=\"emojiContent\"></div>\n  </button>\n`);","import { LazyLoader } from '../LazyLoader';\n\nimport { View } from './view';\n\nimport { CategoryKey, EmojiRecord } from '../types';\n\nimport template from './Emoji.template';\nimport { getPrefixedClasses } from '../util';\n\nconst classes = getPrefixedClasses('emojiButton');\n\n\ntype EmojiOptions = {\n  emoji: EmojiRecord\n  lazyLoader?: LazyLoader;\n  category?: CategoryKey;\n};\n\nexport class Emoji extends View {\n  private emoji: EmojiRecord\n  private lazyLoader?: LazyLoader;\n  private category?: CategoryKey;\n\n  constructor({ emoji, lazyLoader, category }: EmojiOptions) {\n    super({ template, classes });\n\n    this.emoji = emoji;\n    this.lazyLoader = lazyLoader;\n    this.category = category;\n  }\n\n  initialize() {\n    this.uiEvents = [\n      View.uiEvent('focus', this.handleFocus)\n    ];\n    \n    super.initialize();\n  }\n\n  private handleFocus() {\n    if (this.category) {\n      this.events.emit('focus:change', this.category);\n    }\n  }\n\n  activateFocus(performFocus?: boolean) {\n    this.el.tabIndex = 0;\n    if (performFocus) {\n      this.el.focus();\n    }\n  }\n\n  deactivateFocus() {\n    this.el.tabIndex = -1;\n  }\n\n  renderSync(): HTMLElement {\n    return super.renderSync({\n      emoji: this.emoji,\n      emojiContent: this.renderer.doRender(this.emoji, this.lazyLoader)\n    });\n  }\n}\n","import { Events } from './events';\n\ntype FocusGridEvent = 'focus:change' | 'focus:underflow' | 'focus:overflow';\n\nexport type FocusChangeEvent = {\n  from: number;\n  to: number;\n  performFocus: boolean;\n};\n\ntype Cell = {\n  row: number;\n  column: number;\n};\n\n/**\n * Represents an array of emojis as a grid with rows and columns as they appear in the UI.\n * This makes focus traversal calculations less complex in the EmojiContainer.\n * \n * The grid is given a flat array of emojis for the current category and the number of columns. It will create\n * a virtual grid structure mapping those emojis to rows of the desired length.\n * \n * The focus can be traversed left, right, up, and down, or to a specific row and column coordinate. Later, the currently\n * selected grid cell can be translated back to the index in the original emoji array.\n * \n * The grid emits three events:\n * - focus:change - when the focused cell changes\n *                  Event properties: from (the previous index), to (the new index), and performFocus (whether to focus the new cell)\n * \n * - focus:underflow - when the focus tries to move below the first emoji in the category\n *                     Event properties: index (the current index within the grid)\n * \n * - focus:overflow - when the focus tries to move beyond the last emoji in the category\n *                     Event properties: index (the current index within the grid)\n */\n export class FocusGrid {\n  private focusedRow: number;\n  private focusedColumn: number;\n  private rowCount: number;\n  private columnCount: number;\n  private emojiCount: number;\n  private wrap: boolean;\n\n  private events = new Events<FocusGridEvent>();\n\n  /** Maps focus traversal keys to their associated handlers. */\n  private keyHandlers = {\n    ArrowLeft: this.focusPrevious.bind(this),\n    ArrowRight: this.focusNext.bind(this),\n    ArrowUp: this.focusUp.bind(this),\n    ArrowDown: this.focusDown.bind(this)\n  };\n\n  /**\n   * Creates a FocusGrid.\n   * \n   * @param columnCount The number of columns in the emoji picker.\n   * @param emojiCount The total number of emojis in this category.\n   * @param initialRow The initial focused row.\n   * @param initialColumn The initial focused column.\n   */\n  constructor(columnCount: number, emojiCount: number, initialRow = 0, initialColumn = 0, wrap = false) {\n    this.rowCount = Math.ceil(emojiCount / columnCount);\n    this.columnCount = columnCount;\n    this.focusedRow = initialRow;\n    this.focusedColumn = initialColumn;\n    this.emojiCount = emojiCount;\n    this.wrap = wrap;\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  /**\n   * Removes all bound event listeners.\n   */\n  destroy() {\n    this.events.removeAll();\n  }\n\n  /**\n   * Public API for listening for focus events.\n   */\n  on(event: FocusGridEvent, handler: (...args: any[]) => void) {\n    this.events.on(event, handler);\n  }\n\n  /**\n   * Handles keydown events that are forwarded from the EmojiContainer and executes\n   * the appropriate focus function.\n   * @param event the KeyboardEvent that occurred\n   */\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key in this.keyHandlers) {\n      event.preventDefault();\n      this.keyHandlers[event.key]();\n    }\n  }\n\n  /**\n   * Sets the focused cell to a specific row and, optionally, column. If no column is specified,\n   * the focused column remains unchanged.\n   * \n   * The `performFocus` flag determines whether the focus should be moved to the new cell. If it\n   * is false, the focused element will be changed but the actual focus() call will not be triggered yet.\n   * \n   * @param row The new focused row\n   * @param column The new focused column, if specified\n   * @param performFocus Whether or not to perform the actual focus operation.\n   */\n  setCell(row: number, column?: number, performFocus = true) {\n    const previousIndex = this.getIndex();\n    this.focusedRow = row;\n\n    if (column !== undefined) {\n      // If the column exceeds the column count, focus the last column.\n      this.focusedColumn = Math.min(this.columnCount, column);\n    }\n\n    // If the given cell is out of bounds, focus to the last cell.\n    if (this.focusedRow >= this.rowCount || this.getIndex() >= this.emojiCount) {\n      this.focusedRow = this.rowCount - 1;\n      this.focusedColumn = (this.emojiCount % this.columnCount) - 1;\n    }\n\n    this.events.emit('focus:change', { from: previousIndex, to: this.getIndex(), performFocus });\n  }\n\n  setFocusedIndex(index: number, performFocus = true) {\n    const row = Math.floor(index / this.columnCount);\n    const column = index % this.columnCount;\n    this.setCell(row, column, performFocus);\n  }\n\n  /**\n   * Moves the focus to the next cell in the current row.\n   * Emits `focus:overflow` if there is no next cell. \n   */\n  focusNext() {\n    if (this.focusedColumn < this.columnCount - 1 && this.getIndex() < this.emojiCount - 1) {\n      this.setCell(this.focusedRow, this.focusedColumn + 1);\n    } else if (this.focusedRow < this.rowCount - 1) {\n      this.setCell(this.focusedRow + 1, 0);\n    } else if (this.wrap) {\n      this.setCell(0, 0);\n    } else {\n      this.events.emit('focus:overflow', 0);\n    }\n  }\n\n  /**\n   * Moves the focus to the previous cell in the current row.\n   * Emits `focus:underflow` if there is no previous cell.\n   */\n  focusPrevious() {\n    if (this.focusedColumn > 0) {\n      this.setCell(this.focusedRow, this.focusedColumn - 1);\n    } else if (this.focusedRow > 0) {\n      this.setCell(this.focusedRow - 1, this.columnCount - 1);\n    } else if (this.wrap) {\n      this.setCell(this.rowCount - 1, this.columnCount - 1);\n    } else {\n      this.events.emit('focus:underflow', this.columnCount - 1);\n    }\n  }\n\n  /**\n   * Moves the focus to the cell directly above the current one.\n   * Emits `focus:underflow` if the current cell is in the first row.\n   */\n  focusUp() {\n    if (this.focusedRow > 0) {\n      this.setCell(this.focusedRow - 1, this.focusedColumn);\n    } else {\n      this.events.emit('focus:underflow', this.focusedColumn);\n    }\n  }\n\n  /**\n   * Moves the focus to the cell directly below the current one.\n   * Emits `focus:overflow` if the current cell is in the last row.\n   */\n  focusDown() {\n    if (this.focusedRow < this.rowCount - 1) {\n      this.setCell(this.focusedRow + 1, this.focusedColumn);\n    } else {\n      this.events.emit('focus:overflow', this.focusedColumn);\n    }\n  }\n\n  /**\n   * Moves the focus to a specific emoji in the category.\n   * @param index the index of the emoji to focus on\n   */\n  focusToIndex(index: number) {\n    this.setCell(Math.floor(index / this.columnCount), index % this.columnCount);\n  }\n\n  /**\n   * Gets the index in the emoji array of the currently focused cell.\n   * @returns the currently focused cell's index\n   */\n  getIndex(): number {\n    return (this.focusedRow * this.columnCount) + this.focusedColumn;\n  }\n\n  /**\n   * Gets the row and column of the currently focused cell.\n   * @returns the row and column data\n   */\n  getCell(): Cell {\n    return { row: this.focusedRow, column: this.focusedColumn };\n  }\n\n  /**\n   * Gets the total number of rows in the grid\n   * @returns the number of rows in the grid\n   */\n  getRowCount() {\n    return this.rowCount;\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes }) => /* html */`\n  <div class=\"${classes.emojiContainer}\">\n    <div data-placeholder=\"emojis\"></div>\n  </div>\n`);\n","import { Emoji } from './Emoji';\nimport { LazyLoader } from '../LazyLoader';\nimport { getEmojiForEvent, getPrefixedClasses } from '../util';\nimport { View } from './view';\nimport { CategoryKey, EmojiFocusTarget, EmojiRecord } from '../types';\nimport { FocusGrid, FocusChangeEvent } from '../focusGrid';\n\nimport template from './EmojiContainer.template';\n\nconst classes = getPrefixedClasses('emojiContainer');\n\ntype EmojiContainerOptions = {\n  emojis: EmojiRecord[];\n  showVariants: boolean;\n  preview: boolean;\n  lazyLoader?: LazyLoader;\n  category?: CategoryKey;\n  fullHeight?: boolean;\n};\n\n/**\n * An EmojiContainer contains all the emojis in a given category.\n * \n * It manages keybaord focus for all emojis in the category.\n */\nexport class EmojiContainer extends View {\n  protected emojis: EmojiRecord[];\n  protected showVariants: boolean;\n  protected preview: boolean;\n  protected lazyLoader?: LazyLoader;\n  private category?: CategoryKey;\n  private grid: FocusGrid;\n  emojiViews: Emoji[];\n  emojiElements: HTMLElement[];\n  fullHeight = false;\n\n  constructor({ emojis, showVariants, preview = true, lazyLoader, category, fullHeight = false }: EmojiContainerOptions) {\n    super({ template, classes });\n\n    this.showVariants = showVariants;\n    this.lazyLoader = lazyLoader;\n    this.preview = preview;\n    this.emojis = emojis;\n    this.category = category;\n    this.fullHeight = fullHeight;\n\n    this.setFocus = this.setFocus.bind(this);\n    this.triggerNextCategory = this.triggerNextCategory.bind(this);\n    this.triggerPreviousCategory = this.triggerPreviousCategory.bind(this);\n  }\n\n  initialize() {\n    this.grid = new FocusGrid(this.options.emojisPerRow, this.emojiCount, 0, 0, !this.category);\n    this.grid.on('focus:change', this.setFocus);\n    this.grid.on('focus:overflow', this.triggerNextCategory);\n    this.grid.on('focus:underflow', this.triggerPreviousCategory);\n\n    this.uiEvents = [\n      View.uiEvent('click', this.selectEmoji),\n      View.uiEvent('keydown', this.grid.handleKeyDown)\n    ];\n\n    if (this.preview) {\n      this.uiEvents.push(\n        View.uiEvent('mouseover', this.showPreview),\n        View.uiEvent('mouseout', this.hidePreview),\n        View.uiEvent('focus', this.showPreview, { capture: true }),\n        View.uiEvent('blur', this.hidePreview, { capture: true })\n      );\n    }\n\n    super.initialize();\n  }\n\n  /**\n   * Marks the specified cell in the emoji grid as focused.\n   * \n   * @param focusTarget The target emoji to make focusable.\n   * @param performFocus Whether or not to actually focus the new target.\n   */\n  private setFocusedView(focusTarget: EmojiFocusTarget | undefined, performFocus?: boolean): void {\n    if (!focusTarget) {\n      return;\n    }\n\n    if (typeof focusTarget === 'string') {\n      const index = this.emojis.findIndex(emoji => emoji.emoji === focusTarget);\n      this.grid.setFocusedIndex(index, false);\n\n      setTimeout(() => {\n        const targetView = this.emojiViews[index].el;\n        targetView.scrollIntoView();\n\n        // Need to scroll up a bit to offset the sticky header\n        const header = targetView.parentElement?.previousElementSibling as HTMLElement;\n        const emojiArea = targetView.parentElement?.parentElement?.parentElement as HTMLElement;\n        emojiArea.scrollTop -= header?.offsetHeight ?? 0;\n      });\n    } else if (focusTarget.row === 'first' || focusTarget.row === 0) {\n      this.grid.setCell(0, focusTarget.offset, performFocus);\n    } else if (focusTarget.row === 'last') {\n      this.grid.setCell(this.grid.getRowCount() - 1, focusTarget.offset, performFocus);\n    }\n  }\n\n  /**\n   * Sets the active state of this category's emojis. If a category is active, its emojis\n   * are focusable.\n   * \n   * @param active the desired active state\n   * @param focusTarget the target emoji to make focusable if active is true\n   * @param performFocus whether or not to actually focus the new target if active is true\n   */\n  setActive(active: boolean, focusTarget?: EmojiFocusTarget, performFocus?: boolean) {\n    if (active) {\n      this.setFocusedView(focusTarget, performFocus);\n    } else {\n      this.emojiViews[this.grid.getIndex()]?.deactivateFocus();\n    }\n  }\n\n  renderSync(): HTMLElement {\n    this.emojiViews = this.emojis.map(emoji =>\n      this.viewFactory.create(Emoji, {\n        emoji,\n        category: this.category,\n        lazyLoader: this.lazyLoader,\n        renderer: this.renderer\n      })\n    );\n\n    this.emojiElements = this.emojiViews.map(view => view.renderSync());\n\n    return super.renderSync({\n      emojis: this.emojiElements,\n      i18n: this.i18n\n    });\n  }\n\n  destroy() {\n    super.destroy();\n    this.emojiViews.forEach(view => view.destroy());\n    this.grid.destroy();\n  }\n\n  /**\n   * Causes the previous category to become active/focusable due to a focus:underflow event.\n   * @param column the currently focused column\n   */\n  private triggerPreviousCategory(column: number) {\n    this.events.emit('category:previous', column);\n  }\n\n  /**\n   * Causes the next category to become active/focusable due to a focus:overflow event.\n   * @param column the currently focused column\n   */\n  private triggerNextCategory(column: number) {\n    if (this.category) {\n      this.events.emit('category:next', column);\n    }\n  }\n\n  /**\n   * Reacts to a focus:change event from the grid.\n   * \n   * The current emoji is deactivated, and the new emoji is activated.\n   * An event is then emitted which will pause the scroll listener in the main emoji area,\n   * otherwise the active category tab can get out of sync.\n   * \n   * @param event The focus:change event.\n   */\n  private setFocus({ from, to, performFocus }: FocusChangeEvent) {\n    this.emojiViews[from]?.deactivateFocus();\n    this.emojiViews[to]?.activateFocus(performFocus);\n  }\n\n  private selectEmoji(event: Event) {\n    // Prevent the document click listener from firing, which in some cases\n    // can cause the picker to close even when it's configured not to.\n    event.stopPropagation();\n    const emoji = getEmojiForEvent(event, this.emojis);\n    if (emoji) {\n      this.events.emit('emoji:select', {\n        emoji,\n        showVariants: this.showVariants\n      });\n    }\n  }\n\n  private showPreview(event: Event) {\n    const target = event.target as HTMLElement;\n    const button = target.closest('button');\n    const content = button?.firstElementChild;\n    \n    const emoji = getEmojiForEvent(event, this.emojis);\n    if (emoji) {\n      this.events.emit('preview:show', emoji, content?.cloneNode(true));\n    }\n  }\n\n  private hidePreview(event: Event) {\n    const emoji = getEmojiForEvent(event, this.emojis);\n    if (emoji) {\n      this.events.emit('preview:hide');\n    }\n  }\n\n  get emojiCount(): number {\n    return this.emojis.length;\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes, category, pickerId, icon, i18n }) => /* html */`\n  <section class=\"${classes.emojiCategory}\" role=\"tabpanel\" aria-labelledby=\"${pickerId}-category-${category.key}\">\n    <h3 data-category=\"${category.key}\" class=\"${classes.categoryName}\">\n      <i data-icon=\"${icon}\"></i>\n      ${i18n.get(`categories.${category.key}`, category.message || category.key)}\n    </h3>\n    <div data-view=\"emojis\" data-render=\"sync\"></div>\n  </section>\n`);\n","import { BaseEmojiCategory } from './BaseEmojiCategory';\nimport { EmojiContainer } from './EmojiContainer';\nimport { LazyLoader } from '../LazyLoader';\nimport { categoryIcons } from '../icons';\nimport { Category } from '../types';\nimport template from './EmojiCategory.template';\n\ntype EmojiCategoryOptions = {\n  category: Category;\n  showVariants: boolean;\n  lazyLoader?: LazyLoader;\n  emojiVersion: number;\n};\nexport class EmojiCategory extends BaseEmojiCategory {\n  private emojiVersion: number;\n\n  constructor({ category, showVariants, lazyLoader, emojiVersion }: EmojiCategoryOptions) {\n    super({ category, showVariants, lazyLoader, template });\n\n    this.showVariants = showVariants;\n    this.lazyLoader = lazyLoader;\n    this.emojiVersion = emojiVersion;\n  }\n\n  initialize() {\n    this.uiElements = { ...this.baseUIElements };\n    super.initialize();\n  }\n\n  async render(): Promise<HTMLElement> {\n    await this.emojiDataPromise;\n    const emojis = await this.emojiData.getEmojis(this.category, this.emojiVersion);\n\n    this.emojiContainer = this.viewFactory.create(EmojiContainer, {\n      emojis,\n      showVariants: this.showVariants,\n      lazyLoader: this.lazyLoader,\n      category: this.category.key\n    });\n\n    return super.render({\n      category: this.category,\n      emojis: this.emojiContainer,\n      emojiCount: emojis.length,\n      icon: categoryIcons[this.category.key]\n    });\n  }\n}\n","import { EmojiContainer } from './EmojiContainer';\nimport { Emoji as EmojiView } from './Emoji';\nimport { EmojiRecord } from '../types';\n\nexport class RecentEmojiContainer extends EmojiContainer {\n  constructor({ category, emojis, preview = true, lazyLoader }) {\n    super({ category, emojis, showVariants: false, preview, lazyLoader });\n  }\n\n  async addOrUpdate(emoji: EmojiRecord): Promise<void> {\n    // If the emoji already exists, remove it as it is being moved to the front\n    const existing = this.el.querySelector(`[data-emoji=\"${emoji.emoji}\"]`);\n    if (existing) {\n      this.el.removeChild(existing);\n      this.emojis = this.emojis.filter(e => e !== emoji);\n    }\n    \n    // Add the new emoji to the beginning of the list\n    const newView = this.viewFactory.create(EmojiView, { emoji });\n    this.el.insertBefore(newView.renderSync(), this.el.firstChild);\n    this.emojis = [\n      emoji,\n      ...this.emojis.filter(e => e !== emoji)\n    ];\n\n    // Prune the list to the maximum length\n    if (this.emojis.length > this.options.maxRecents) {\n      this.emojis = this.emojis.slice(0, this.options.maxRecents);\n      const excess = this.el.childElementCount - this.options.maxRecents;\n      for (let i = 0; i < excess; i++) {\n        if (this.el.lastElementChild) {\n          this.el.removeChild(this.el.lastElementChild);\n        }\n      }\n    }\n  }\n}","import { Template } from '../Template';\n\nexport default new Template(({ emojiCount, classes, category, pickerId, icon, i18n }) => /* html */`\n  <section class=\"${classes.emojiCategory}\" role=\"tabpanel\" aria-labelledby=\"${pickerId}-category-${category.key}\">\n    <h3 data-category=\"${category.key}\" class=\"${classes.categoryName}\">\n      <i data-icon=\"${icon}\"></i>\n      ${i18n.get(`categories.${category.key}`, category.message || category.key)}\n    </h3>\n    <div data-empty=\"${emojiCount === 0}\" class=\"${classes.recentEmojis}\">\n      <div data-view=\"emojis\" data-render=\"sync\"></div>\n    </div>\n    <div class=\"${classes.noRecents}\">\n      ${i18n.get('recents.none')}\n    </div>\n  </section>\n`, { mode: 'async' });","import { View } from './view';\nimport { BaseEmojiCategory, classes } from './BaseEmojiCategory';\nimport { RecentEmojiContainer } from './RecentEmojiContainer';\nimport { Category, EmojiRecord } from '../types';\nimport { LazyLoader } from '../LazyLoader';\nimport { categoryIcons } from '../icons';\nimport template from './RecentEmojiCategory.template';\nimport { RecentsProvider } from '../recents/RecentsProvider';\n\ntype RecentEmojiCategoryOptions = {\n  category: Category;\n  provider: RecentsProvider;\n  lazyLoader?: LazyLoader;\n};\nexport class RecentEmojiCategory extends BaseEmojiCategory {\n  emojiContainer: RecentEmojiContainer;\n  private provider: RecentsProvider;\n\n  constructor({ category, lazyLoader, provider }: RecentEmojiCategoryOptions) {\n    super({ category, showVariants: false, lazyLoader, template });\n    this.provider = provider;\n  }\n\n  initialize() {\n    this.uiElements = {\n      ...this.baseUIElements,\n      recents: View.byClass(classes.recentEmojis),\n    };\n\n    this.appEvents = {\n      'recent:add': this.addRecent\n    };\n\n    super.initialize();\n  }\n\n  async addRecent(recent: EmojiRecord) {\n    await this.emojiContainer.addOrUpdate(recent);\n    this.ui.recents.dataset.empty = 'false';\n  }\n\n  async render(): Promise<HTMLElement> {\n    const recents = this.provider?.getRecents(this.options.maxRecents);\n\n    this.emojiContainer = this.viewFactory.create(RecentEmojiContainer, {\n      emojis: recents,\n      showVariants: false,\n      lazyLoader: this.lazyLoader,\n      category: this.category.key\n    });\n\n    await super.render({\n      category: this.category,\n      emojis: this.emojiContainer,\n      emojiCount: recents.length,\n      icon: categoryIcons[this.category.key]\n    });\n    \n    return this.el;\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes, category, pickerId, icon, i18n }) => /* html */`\n  <section class=\"${classes.emojiCategory}\" role=\"tabpanel\" aria-labelledby=\"${pickerId}-category-${category.key}\">\n    <h3 data-category=\"${category.key}\" class=\"${classes.categoryName}\">\n      <i data-icon=\"${icon}\"></i>\n      ${i18n.get(`categories.${category.key}`, category.message || category.key)}\n    </h3>\n    <div data-view=\"emojis\" data-render=\"sync\"></div>\n  </section>\n`);","import { EmojiContainer } from './EmojiContainer';\nimport { BaseEmojiCategory } from './BaseEmojiCategory';\nimport { LazyLoader } from '../LazyLoader';\nimport { Category } from '../types';\nimport { categoryIcons } from '../icons';\nimport template from './CustomEmojiCategory.template';\n\ntype CustomEmojiCategoryOptions = {\n  category: Category;\n  lazyLoader?: LazyLoader;\n}\nexport class CustomEmojiCategory extends BaseEmojiCategory {\n  constructor({ category, lazyLoader }: CustomEmojiCategoryOptions) {\n    super({ template, showVariants: false, lazyLoader, category})\n  }\n\n  initialize() {\n    this.uiElements = { ...this.baseUIElements };\n    super.initialize();\n  }\n\n  async render(): Promise<HTMLElement> {\n    this.emojiContainer = this.viewFactory.create(EmojiContainer, {\n      emojis: this.customEmojis,\n      showVariants: this.showVariants,\n      lazyLoader: this.lazyLoader,\n      category: this.category.key\n    });\n\n    return super.render({\n      category: this.category,\n      emojis: this.emojiContainer,\n      emojiCount: this.customEmojis.length,\n      icon: categoryIcons[this.category.key]\n    });\n  }\n}","type Callback = () => void;\n\nexport class LazyLoader {\n  private elements: Map<Element, Callback> = new Map();\n\n  lazyLoad(placeholder: HTMLElement, callback: Callback): HTMLElement {\n    this.elements.set(placeholder, callback);\n    return placeholder;\n  }\n\n  observe(root: HTMLElement): void {\n    if (window.IntersectionObserver) {\n      const observer = new IntersectionObserver(\n        entries => {\n          entries\n            .filter(entry => entry.intersectionRatio > 0)\n            .map(entry => entry.target)\n            .forEach(element => {\n              const callback = this.elements.get(element);\n              callback?.();\n              observer.unobserve(element);\n            });\n        },\n        {\n          root\n        }\n      );\n\n      this.elements.forEach((callback, element) => {\n        observer.observe(element);\n      });\n    } else {\n      this.elements.forEach(callback => {\n        callback();\n      });\n    }\n  }\n}\n","import { View } from './view';\nimport { CategoryTabs } from './CategoryTabs';\nimport { EmojiCategory } from './EmojiCategory';\nimport { RecentEmojiCategory } from './RecentEmojiCategory';\nimport { CustomEmojiCategory } from './CustomEmojiCategory';\nimport { getPrefixedClasses, throttle } from '../util';\nimport { LazyLoader } from '../LazyLoader';\nimport { Category, CategoryKey, EmojiFocusTarget } from '../types';\nimport { Template } from '../Template';\n\nimport { SetActiveOptions } from './CategoryTab';\nconst classes = getPrefixedClasses('emojiArea');\n\nconst template = new Template(({ classes }) => /* html */`\n  <div class=\"${classes.emojiArea}\">\n    <div data-placeholder=\"emojis\"></div>\n  </div>\n`, { mode: 'async' });\n\nconst categoryClasses = {\n  recents: RecentEmojiCategory,\n  custom: CustomEmojiCategory\n};\n\nfunction getCategoryClass(category: Category) {\n  return categoryClasses[category.key] || EmojiCategory;\n}\n\ntype ScrollListenerState = \n  'active' | // handle scroll events\n  'suspend' | // don't handle scroll events\n  'resume'; // skip current scroll event then re-enable for the next one\n\ntype CategoryFocusTarget = 'button' | EmojiFocusTarget;\n\ntype SelectCategoryOptions = {\n  focus?: CategoryFocusTarget;\n  scroll?: 'animate' | 'jump';\n  performFocus?: boolean;\n};\n\nfunction getFocusTarget(focus: CategoryFocusTarget | undefined): EmojiFocusTarget | undefined {\n  if (!focus || focus === 'button') {\n    return {\n      row: 'first',\n      offset: 0\n    };\n  }\n\n  return focus;\n}\n\ntype EmojiAreaOptions = {\n  categoryTabs?: CategoryTabs;\n  categories: Category[];\n  emojiVersion: number;\n}\n\n/**\n * The EmojiArea is the main view of the picker, it contains all the categories and their emojis inside\n * a main scrollable area.\n */\nexport class EmojiArea extends View {\n  private selectedCategory = 0;\n  private categoryTabs?: CategoryTabs;\n  private categories: Category[];\n  private emojiVersion: number;\n\n  private observer: ResizeObserver;\n\n  private scrollListenerState: ScrollListenerState = 'active';\n  private lazyLoader = new LazyLoader();\n\n  emojiCategories: EmojiCategory[];\n\n  constructor({ categoryTabs, categories, emojiVersion }: EmojiAreaOptions) {\n    super({ template, classes });\n\n    this.categoryTabs = categoryTabs;\n    this.categories = categories;\n    this.emojiVersion = emojiVersion;\n\n    this.handleScroll = throttle(this.handleScroll.bind(this), 100);\n  }\n\n  initialize() {\n    this.appEvents = { \n      'category:select': this.handleCategorySelect,\n      'category:previous': this.focusPreviousCategory,\n      'category:next': this.focusNextCategory,\n      'focus:change': this.updateFocusedCategory\n    };\n    this.uiElements = { emojis: View.byClass(classes.emojiArea) };\n    this.uiEvents = [ View.uiEvent('scroll', this.handleScroll) ]\n\n    super.initialize();\n  }\n\n  get focusableEmoji(): HTMLElement {\n    return this.el.querySelector<HTMLElement>('[tabindex=\"0\"]') as HTMLElement;\n  }\n\n  async render(): Promise<HTMLElement> {\n    this.emojiCategories = this.categories.map(this.createCategory, this);\n\n    const categoryEmojiElements = {};\n    this.categories.forEach((category, index) => {\n      categoryEmojiElements[`emojis-${category.key}`] = this.emojiCategories[index];\n    });\n\n    await super.render({\n      emojis: await Promise.all(this.emojiCategories.map(category => category.render()))\n    });\n\n    this.lazyLoader.observe(this.el);\n\n    return this.el;\n  }\n\n  destroy() {\n    super.destroy();\n    this.emojiCategories.forEach(category => {\n      this.observer?.unobserve(category.el);\n      category.destroy();\n    });\n  }\n\n  private handleCategorySelect(category: CategoryKey, options?: SelectCategoryOptions) {\n\n    // On touch devices, if there is a \"momentum scroll\" in progress, we need to stop it so we can jump to the selected category\n    this.el.style.overflow = 'hidden';\n    this.selectCategory(category, options);\n    this.el.style.overflow = 'auto';\n  }\n\n  private createCategory(category: Category): EmojiCategory {\n    const Category = getCategoryClass(category);\n\n    return this.viewFactory.create(Category, {\n      category,\n      showVariants: true,\n      lazyLoader: this.lazyLoader,\n      emojiVersion: this.emojiVersion,\n      provider: this.options.recentsProvider\n    });\n  }\n\n  private determineInitialCategory() {\n    if (this.options.initialCategory) {\n      if (this.categories.find(c => c.key === this.options.initialCategory)) {\n        return this.options.initialCategory;\n      }\n    }\n\n    return this.categories.find(c => c.key !== 'recents')?.key;\n  }\n\n  private determineFocusTarget(category) {\n    const categoryView = this.emojiCategories.find(c => c.category.key === category);\n    if (this.options.initialEmoji && categoryView?.el.querySelector(`[data-emoji=\"${this.options.initialEmoji}\"]`)) {\n      return this.options.initialEmoji;\n    }\n\n    return 'button'\n  }\n\n  reset(performFocus = true): void {\n    this.events.emit('preview:hide');\n\n    const category = this.determineInitialCategory();\n    if (category) {\n      this.selectCategory(category, { \n        focus: this.determineFocusTarget(category),\n        performFocus, \n        scroll: 'jump' \n      });\n\n      this.selectedCategory = this.getCategoryIndex(category);\n    }\n  }\n\n  /**\n   * Given a category key, returns the index of the category in the categories array.\n   * @param key \n   * @returns \n   */\n  private getCategoryIndex(key: CategoryKey): number {\n    return this.categories.findIndex(category => category.key === key);\n  }\n\n  private focusPreviousCategory(column: number) {\n    if (this.selectedCategory > 0) {\n      this.focusCategory(this.selectedCategory - 1, { row: 'last', offset: column ?? this.options.emojisPerRow });\n    }\n  }\n\n  private focusNextCategory(column: number) {\n    if (this.selectedCategory < this.categories.length - 1) {\n      this.focusCategory(this.selectedCategory + 1, { row: 'first', offset: column ?? 0 });\n    }\n  }\n\n  /**\n   * Changes the focused category.\n   * \n   * @param category the index of the category\n   * @param focusTarget the desired focus target in the new category\n   */\n  private focusCategory(category: number, focusTarget: CategoryFocusTarget) {\n    this.selectCategory(category, {\n      focus: focusTarget,\n      performFocus: true\n    });\n  }\n\n  /**\n   * Changes the current category, optionally animating, scrolling, and changing the focus.\n   * \n   * Supported options are:\n   * - focus: The target element that should become focusable\n   * - performFocus: Whether or not to actually focus the new focusable element\n   * - scroll: Whether the scrolling should be immediate (jump), animated (animate), or none (undefined).\n   * - animate: Whether or not to animate active indicator under the button.\n   * \n   * @param category The key or index of the category to select.\n   * @param options The options for the category selection.\n   */\n  private async selectCategory(category: CategoryKey | number, options: SelectCategoryOptions = {}): Promise<void> {\n    this.scrollListenerState = 'suspend';\n    const { focus, performFocus, scroll } = {\n      performFocus: false,\n      ...options\n    };\n\n    this.emojiCategories[this.selectedCategory].setActive(false);\n\n    const categoryIndex = this.selectedCategory = typeof category === 'number' ? category : this.getCategoryIndex(category);\n    this.categoryTabs?.setActiveTab(this.selectedCategory, {\n      performFocus,\n      scroll: focus === 'button'\n    })\n    // this.categoryTabs?.setActiveTab(this.selectedCategory, performFocus, focus === 'button');\n    const targetPosition = this.emojiCategories[categoryIndex].el.offsetTop;\n    this.emojiCategories[categoryIndex].setActive(true, getFocusTarget(focus), focus !== 'button' && performFocus);\n\n    if (scroll) {\n      this.el.scrollTop = targetPosition;\n    }\n\n    this.scrollListenerState = 'resume';\n  }\n\n  /**\n   * Updates the category tabs to reflect the currently focused category.\n   * @param category the key of the currently focused category\n   */\n  private updateFocusedCategory(category: CategoryKey) {\n    // Do nothing if this is already the focused category\n    if (this.categories[this.selectedCategory].key === category) {\n      return;\n    }\n\n    this.scrollListenerState = 'suspend';\n    this.selectedCategory = this.getCategoryIndex(category);\n    this.categoryTabs?.setActiveTab(this.selectedCategory, {\n      changeFocusable: false,\n      performFocus: false\n    });\n    this.scrollListenerState = 'resume';\n  }\n\n  /**\n   * On scroll, checks the new scroll position and highlights a new category if necessary.\n   */\n  handleScroll(): void {\n    // Do nothing if we are in the 'suspend' state or if category tabs are disabled.\n    if (this.scrollListenerState === 'suspend' || !this.categoryTabs) {\n      return;\n    }\n\n    // If we are in the 'resume' state, don't handle the scroll but re-enable the listener for the\n    // next scroll event.\n    if (this.scrollListenerState === 'resume') {\n      this.scrollListenerState = 'active';\n      return;\n    }\n\n    const currentPosition = this.el.scrollTop;\n    const maxScroll = this.el.scrollHeight - this.el.offsetHeight;    \n\n    const targetCategory = this.emojiCategories.findIndex((category: EmojiCategory, index: number) => {\n      return currentPosition < (this.emojiCategories[index + 1])?.el.offsetTop;\n    });\n\n    const options: SetActiveOptions = {\n      changeFocusable: false,\n      performFocus: false,\n      scroll: false\n    };\n\n    if (currentPosition === 0) {\n      this.categoryTabs.setActiveTab(0, options);\n    } else if (Math.floor(currentPosition) === Math.floor(maxScroll) || targetCategory < 0) {\n      this.categoryTabs.setActiveTab(this.categories.length - 1, options);\n    } else {\n      this.categoryTabs.setActiveTab(targetCategory, options);\n    }\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classList, classes, icon, message }) => /* html */`\n<div class=\"${classList}\" role=\"alert\">\n  <div class=\"${classes.iconContainer}\"><i data-size=\"10x\" data-icon=\"${icon}\"></i></div>\n  <h3 class=\"${classes.title}\">${message}</h3>\n</div>\n`);\n","import { View } from './view';\nimport { Template } from '../Template';\nimport errorTemplate from './ErrorMessage.template';\nimport { getPrefixedClasses } from '../util';\n\ntype ErrorMessageOptions = {\n  message: string;\n  icon?: string;\n  template?: Template;\n  className?: string;\n};\n\nconst classes = getPrefixedClasses('error', 'iconContainer', 'title');\n\nexport class ErrorMessage extends View {\n  private message: string;\n  private icon: string;\n  private className?: string;\n\n  constructor({ message, icon = 'warning', template = errorTemplate, className }: ErrorMessageOptions) {\n    super({ template, classes });\n\n    this.message = message;\n    this.icon = icon;\n    this.className = className;\n  }\n\n  renderSync() {\n    const classList = [classes.error, this.className].join(' ').trim();\n    return super.renderSync({ message: this.message, icon: this.icon, classList });\n  }\n}","import { Template } from '../Template';\n\nexport default new Template(({ classList, classes, icon, i18n, message }) => /* html */`\n  <div class=\"${classList}\" role=\"alert\">\n    <div class=\"${classes.icon}\"><i data-size=\"10x\" data-icon=\"${icon}\"></i></div>\n    <h3 class=\"${classes.title}\">${message}</h3>\n    <button type=\"button\">${i18n.get('retry')}</button>\n  </div>\n`);\n","import { View } from './view';\nimport { ErrorMessage } from './ErrorMessage';\nimport { initDatabase } from '../data/emojiData';\n\nimport template from './DataError.template';\nimport { getPrefixedClasses } from '../util';\n\nconst classes = getPrefixedClasses('dataError');\n\ntype DataErrorOptions = {\n  message: string;\n};\n\nexport class DataError extends ErrorMessage {\n  constructor({ message }: DataErrorOptions) {\n    super({ message, template, className: classes.dataError });\n  }\n\n  initialize() {\n    this.uiElements = { retryButton: 'button' };\n    this.uiEvents = [View.childEvent('retryButton', 'click', this.onRetry)];\n\n    super.initialize();\n  }\n\n  private async onRetry() {\n    if (this.emojiData) {\n      await this.emojiData.delete();\n    } else {\n      await this.options.dataStore.deleteDatabase(this.options.locale);\n    }\n\n    this.events.emit('reinitialize');\n    const db = await initDatabase(this.options.locale, this.options.dataStore, this.options.messages, this.options.emojiData, this.emojiData);\n    this.viewFactory.setEmojiData(db);\n    this.events.emit('data:ready', db);\n  }\n}\n","import { View } from './view';\nimport { EmojiRecord } from '../types';\n\nimport { Template } from '../Template';\nimport { getPrefixedClasses, empty, replaceChildren } from '../util';\n\nconst classes = getPrefixedClasses(\n  'preview',\n  'previewEmoji',\n  'previewName',\n  'tagList',\n  'tag'\n);\n\nconst tagTemplate = new Template(({ classes, tag }) => /* html */`\n  <li class=\"${classes.tag}\">${tag}</li>\n`);\n\nconst template = new Template(({ classes }) => /* html */`\n  <div class=\"${classes.preview}\">\n    <div class=\"${classes.previewEmoji}\"></div>\n    <div class=\"${classes.previewName}\"></div>\n    <ul class=\"${classes.tagList}\"></ul>\n  </div>\n`);\n\nexport class EmojiPreview extends View {\n  constructor() {\n    super({ template, classes });\n  }\n\n  initialize() {\n    this.uiElements = {\n      emoji: View.byClass(classes.previewEmoji), \n      name: View.byClass(classes.previewName),\n      tagList: View.byClass(classes.tagList)\n    };\n\n    this.appEvents = {\n      'preview:show': this.showPreview,\n      'preview:hide': this.hidePreview\n    };\n\n    super.initialize();\n  }\n\n  private showPreview(emoji: EmojiRecord, content: HTMLElement) {\n    replaceChildren(this.ui.emoji, content);\n    this.ui.name.textContent = emoji.label;\n    if (emoji.tags) {\n      this.ui.tagList.style.display = 'flex';\n      const tags = emoji.tags.map(tag => tagTemplate.renderSync({ tag, classes }) as HTMLElement);\n      replaceChildren(this.ui.tagList, ...tags);\n    }\n  }\n\n  private hidePreview() {\n    empty(this.ui.emoji);\n    empty(this.ui.name);\n    empty(this.ui.tagList);\n  }\n}\n","import { Template } from '../Template';\n\nexport const clearSearchButtonTemplate = new Template<HTMLButtonElement>(({ classes, i18n }) => /* html */`\n  <button title=\"${i18n.get('search.clear')}\" class=\"${classes.clearSearchButton}\">\n    <i data-icon=\"xmark\"></i>\n  </button>\n`);\n\nexport const searchTemplate = new Template(({ classes, i18n }) => /* html */`\n<div class=\"${classes.searchContainer}\">\n  <input class=\"${classes.searchField}\" placeholder=\"${i18n.get('search')}\">\n  <span class=\"${classes.searchAccessory}\"></span>\n</div>\n`, { mode: 'async' });","import { View } from './view';\n\nimport { icon } from '../icons';\n\nimport { EmojiContainer } from './EmojiContainer';\nimport { ErrorMessage } from './ErrorMessage';\n\nimport { debounce, getPrefixedClasses, replaceChildren } from '../util';\nimport { LazyLoader } from '../LazyLoader';\nimport { Category } from '../types';\n\nimport { clearSearchButtonTemplate, searchTemplate } from './Search.template';\n\ntype SearchOptions = {\n  categories: Category[];\n  emojiVersion: number;\n};\n\nconst classes = getPrefixedClasses(\n  'searchContainer',\n  'searchField',\n  'clearButton',\n  'searchAccessory',\n  'clearSearchButton',\n  'notFound'\n);\n\nexport class Search extends View {\n  private categories: Category[];\n  private emojiVersion: number;\n\n  private searchIcon: Element;\n  private clearSearchButton: HTMLButtonElement;\n  private resultsContainer: EmojiContainer | null;\n  private notFoundMessage: ErrorMessage;\n  private errorMessage: ErrorMessage;\n\n  searchField: HTMLInputElement;\n\n  constructor({ categories, emojiVersion }: SearchOptions) {\n    super({ template: searchTemplate, classes });\n\n    this.categories = categories.filter((category: Category) => category.key !== 'recents');\n    this.emojiVersion = emojiVersion;\n\n    this.search = debounce(this.search.bind(this), 100);\n  }\n\n  initialize() {\n    this.uiElements = {\n      searchField: View.byClass(classes.searchField),\n      searchAccessory: View.byClass(classes.searchAccessory)\n    };\n\n    this.uiEvents = [\n      View.childEvent('searchField', 'keydown', this.onKeyDown),\n      View.childEvent('searchField', 'input', this.onSearchInput)\n    ];\n\n    super.initialize();\n  }\n\n  async render(): Promise<HTMLElement> {\n    await super.render();\n\n    this.searchIcon = icon('search');\n\n    this.notFoundMessage = this.viewFactory.create(ErrorMessage, { \n      message: this.i18n.get('search.notFound'),\n      className: classes.notFound,\n      icon: 'sad' \n    });\n    this.notFoundMessage.renderSync();\n\n    this.errorMessage = this.viewFactory.create(ErrorMessage, { message: this.i18n.get('search.error') });\n    this.errorMessage.renderSync();\n\n    this.clearSearchButton = clearSearchButtonTemplate.render({\n      classes,\n      i18n: this.i18n\n    }) as HTMLButtonElement;\n\n    this.clearSearchButton.addEventListener('click', (event: MouseEvent) => this.onClearSearch(event));\n\n    this.searchField = this.ui.searchField as HTMLInputElement;\n\n    this.showSearchIcon();\n\n    return this.el;\n  }\n\n  private showSearchIcon() {\n    this.showSearchAccessory(this.searchIcon);\n  }\n\n  private showClearSearchButton() {\n    this.showSearchAccessory(this.clearSearchButton);\n  }\n\n  private showSearchAccessory(accessory: Element) {\n    replaceChildren(this.ui.searchAccessory, accessory);\n  }\n\n  clear(): void {\n    (this.searchField as HTMLInputElement).value = '';\n    this.showSearchIcon();\n  }\n\n  focus(): void {\n    this.searchField.focus();\n  }\n\n  onClearSearch(event: Event): void {\n    event.stopPropagation();\n\n    this.searchField.value = '';\n    this.resultsContainer?.destroy();\n    this.resultsContainer = null;\n\n    this.showSearchIcon();\n\n    this.events.emit('content:show');\n    this.searchField.focus();\n  }\n\n  handleResultsKeydown(event: KeyboardEvent): void {\n    if (this.resultsContainer) {\n      if (event.key === 'Escape') {\n        this.onClearSearch(event);\n      }\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this.searchField.value) {\n      this.onClearSearch(event);\n    } else if ((event.key === 'Enter' || event.key === 'ArrowDown') && this.resultsContainer) {\n      event.preventDefault();\n      this.resultsContainer.el.querySelector<HTMLElement>('[tabindex=\"0\"]')?.focus();\n    }\n  }\n\n  onSearchInput(event: Event): void {\n    if (this.searchField.value) {\n      this.showClearSearchButton();\n      this.search();\n    } else {\n      this.onClearSearch(event);\n    }\n  }\n\n  async search() {\n    if (!this.searchField.value) {\n      return;\n    }\n\n    try {\n      const searchResults = await this.emojiData.searchEmojis(\n        this.searchField.value,\n        this.customEmojis, \n        this.emojiVersion,\n        this.categories\n      );\n\n      this.events.emit('preview:hide');\n\n      if (searchResults.length) {\n        const lazyLoader = new LazyLoader();\n        this.resultsContainer = this.viewFactory.create(EmojiContainer, {\n          emojis: searchResults,\n          fullHeight: true,\n          showVariants: true,\n          lazyLoader\n        });\n\n        this.resultsContainer.renderSync();\n        if (this.resultsContainer?.el) {\n          lazyLoader.observe(this.resultsContainer.el);\n          this.resultsContainer.setActive(true, { row: 0, offset: 0}, false);\n\n          this.resultsContainer.el.addEventListener('keydown', event => this.handleResultsKeydown(event));\n\n          this.events.emit('content:show', this.resultsContainer);\n        }\n      } else {\n        this.events.emit('content:show', this.notFoundMessage);\n      }\n    } catch (error) {\n      this.events.emit('content:show', this.errorMessage);\n    }\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes }) => /* html */`\n  <div class=\"${classes.variantOverlay}\">\n    <div class=\"${classes.variantPopup}\">\n      <div data-view=\"emojis\" data-render=\"sync\"></div>\n    </div>\n  </div>\n`);\n","import { View } from './view';\n\nimport { EmojiContainer } from './EmojiContainer';\nimport { EmojiRecord } from '../types';\nimport { animate, getPrefixedClasses } from '../util';\nimport { FocusTrap } from '../focusTrap';\n\nimport template from './VariantPopup.template';\n\nconst classes = getPrefixedClasses(\n  'variantOverlay',\n  'variantPopup'\n);\n\ntype VariantPopupOptions = {\n  emoji: EmojiRecord;\n  parent: HTMLElement;\n};\n\nconst animationOptions = {\n  easing: 'ease-in-out',\n  duration: 250,\n  fill: 'both' as FillMode\n};\n\nconst overlayAnimation = {\n  opacity: [0, 1]\n};\n\nconst popupAnimation = {\n  opacity: [0, 1],\n  transform: ['scale3d(0.8, 0.8, 0.8)', 'scale3d(1, 1, 1)']\n};\n\nexport class VariantPopup extends View {\n  private focusedEmojiIndex = 0;\n\n  private emoji: EmojiRecord;\n  private renderedEmojis: HTMLElement[];\n\n  private emojiContainer: EmojiContainer;\n  private focusTrap = new FocusTrap();\n\n  constructor({ emoji, parent }: VariantPopupOptions) {\n    super({ template, classes, parent });\n\n    this.emoji = emoji;\n  }\n\n  initialize() {\n      this.uiElements = {\n        popup: View.byClass(classes.variantPopup)\n      };\n\n      this.uiEvents = [\n        View.uiEvent('click', this.handleClick),\n        View.uiEvent('keydown', this.handleKeydown)\n      ]\n\n      super.initialize();\n  }\n\n  animateShow = () => \n    Promise.all([\n      animate(this.el, overlayAnimation, animationOptions, this.options),\n      animate(this.ui.popup, popupAnimation, animationOptions, this.options)\n    ]);\n\n  animateHide() {\n    const hideOptions: KeyframeAnimationOptions = { ...animationOptions, direction: 'reverse' };\n\n    return Promise.all([\n      animate(this.el, overlayAnimation, hideOptions, this.options),\n      animate(this.ui.popup, popupAnimation, hideOptions, this.options),\n    ]);\n  }\n\n  private async hide() {\n    await this.animateHide();\n    this.events.emit('variantPopup:hide');\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.hide();\n      event.stopPropagation();\n    }\n  }\n\n  private handleClick(event): void {\n    if (!this.ui.popup.contains(event.target as Node)) {\n      this.hide();\n    }\n  }\n\n  getEmoji(index: number): Element {\n    return this.renderedEmojis[index];\n  }\n\n  setFocusedEmoji(newIndex: number): void {\n    const currentFocusedEmoji = this.getEmoji(this.focusedEmojiIndex) as HTMLElement;\n    currentFocusedEmoji.tabIndex = -1;\n\n    this.focusedEmojiIndex = newIndex;\n    const newFocusedEmoji = this.getEmoji(this.focusedEmojiIndex) as HTMLElement;\n    newFocusedEmoji.tabIndex = 0;\n    newFocusedEmoji.focus();\n  }\n\n  destroy() {\n    this.emojiContainer.destroy();\n    this.focusTrap.deactivate();\n    super.destroy();\n  }\n\n  renderSync(): HTMLElement {\n    const baseEmoji = {\n      ...this.emoji,\n      skins: null\n    };\n\n    const variants = (this.emoji.skins || []).map(variant => ({\n      ...variant,\n      label: this.emoji.label,\n      tags: this.emoji.tags\n    }));\n\n    const emojis = [baseEmoji, ...variants];\n    this.emojiContainer = this.viewFactory.create(EmojiContainer, {\n      emojis,\n      preview: false\n    })\n\n    super.renderSync({ emojis: this.emojiContainer });\n\n    if (emojis.length < this.options.emojisPerRow) {\n      this.el.style.setProperty('--emojis-per-row', emojis.length.toString());\n    }\n\n    return this.el;\n  }\n\n  activate() {\n    this.emojiContainer.setActive(true, { row: 0, offset: 0}, true);\n    this.focusTrap.activate(this.el);\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes, i18n, category, pickerId, icon }) => /* html */`\n<li class=\"${classes.categoryTab}\">\n  <button\n    aria-selected=\"false\"\n    role=\"tab\"\n    class=\"${classes.categoryButton}\"\n    tabindex=\"-1\"\n    title=\"${i18n.get(`categories.${category.key}`, category.message || category.key)}\"\n    type=\"button\"\n    data-category=\"${category.key}\"\n    id=\"${pickerId}-category-${category.key}\"\n  >\n    <i data-icon=\"${icon}\"></i>\n</li>\n`);\n","import { View } from './view';\n\nimport { Category } from '../types';\n\nimport template from './CategoryTab.template';\nimport { getPrefixedClasses } from '../util';\n\n\nconst classes = getPrefixedClasses(\n  'categoryTab', \n  'categoryTabActive', \n  'categoryButton'\n);\n\ntype CategoryTabOptions = {\n  category: Category;\n  icon: Element;\n}\n\nexport type SetActiveOptions = {\n  changeFocusable?: boolean;\n  performFocus?: boolean;\n  scroll?: boolean;\n}\n\nexport class CategoryTab extends View {\n  category: Category;\n  private icon: Element;\n  \n  isActive = false;\n\n  constructor({ category, icon }: CategoryTabOptions) {\n    super({ template, classes });\n\n    this.category = category;\n    this.icon = icon;\n  }\n\n  initialize() {\n    this.uiElements = {\n      button: View.byClass(classes.categoryButton)\n    }\n\n    this.uiEvents = [\n      View.childEvent('button', 'click', this.selectCategory),\n      View.childEvent('button', 'focus', this.selectCategory)\n    ];\n\n    super.initialize();\n  }\n\n  renderSync(): HTMLElement {\n    super.renderSync({\n      category: this.category,\n      icon: this.icon\n    });\n\n    this.ui.button.ariaSelected = 'false';\n\n    return this.el;\n  }\n\n  /**\n   * Sets the active state of the tab.\n   * \n   * @param isActive The new active state\n   * @param changeFocus Whether or not to change the active focusable element to the tab button\n   * @param scroll Whether or not to scroll to the new category\n   */\n  setActive(active: boolean, options: SetActiveOptions = {}) {\n    const { changeFocusable, performFocus, scroll } = {\n      changeFocusable: true,\n      performFocus: true,\n      scroll: true,\n      ...options\n    };\n\n    this.el.classList.toggle(classes.categoryTabActive, active);\n\n    if (changeFocusable) {\n      this.ui.button.tabIndex = active ? 0 : -1;\n      this.ui.button.ariaSelected = active.toString();\n    }\n\n    if (active && performFocus) {\n      this.ui.button.focus();\n\n      if (scroll) {\n        this.events.emit('category:select', this.category.key, { scroll: 'animate', focus: 'button', performFocus: false });\n      }\n    }\n\n    this.isActive = active;\n  }\n\n  private selectCategory() {\n    if (!this.isActive) {\n      this.events.emit('category:select', this.category.key, { scroll: 'animate', focus: 'button', performFocus: true });\n    }\n  }\n}\n","import { Template } from '../Template';\n\nexport default new Template(({ classes }) => /* html */`\n  <div class=\"${classes.categoryButtonsContainer}\">\n    <ul role=\"tablist\" class=\"${classes.categoryButtons}\">\n      <div data-placeholder=\"tabs\"></div>\n    </ul>\n  </div>\n`);","import { View } from './view';\n\nimport { CategoryTab, SetActiveOptions } from './CategoryTab';\nimport { categoryIcons } from '../icons';\nimport { Category } from '../types';\n\nimport template from './CategoryTabs.template';\nimport { getPrefixedClasses } from '../util';\n\ntype CategoryTabsOptions = {\n  categories: Category[];\n}\n\nconst classes = getPrefixedClasses('categoryButtons', 'categoryButtonsContainer');\n\nexport class CategoryTabs extends View {\n  private categories: Category[];\n  private tabViews: CategoryTab[];\n  private activeCategoryIndex = 0;\n\n  constructor({ categories }: CategoryTabsOptions) {\n    super({ template, classes });\n\n    this.categories = categories;\n  }\n\n  initialize() {\n    this.keyBindings = {\n      ArrowLeft: this.stepSelectedTab(-1),\n      ArrowRight: this.stepSelectedTab(1)\n    };\n\n    this.uiEvents = [\n      View.uiEvent('scroll', this.checkOverflow)\n    ];\n\n    super.initialize();\n  }\n\n  checkOverflow() {\n    // Check the difference to account for fractional pixels in the scroll position\n    const hasOverflowRight = Math.abs(this.el.scrollLeft - (this.el.scrollWidth - this.el.offsetWidth)) > 1;\n    const hasOverflowLeft = this.el.scrollLeft > 0;\n\n    this.el.className = 'categoryButtonsContainer';\n    if (hasOverflowLeft && hasOverflowRight) {\n      this.el.classList.add('has-overflow-both');\n    } else if (hasOverflowLeft) {\n      this.el.classList.add('has-overflow-left');\n    } else if (hasOverflowRight) {\n      this.el.classList.add('has-overflow-right');\n    }\n  }\n\n  renderSync(): HTMLElement {\n    this.tabViews = this.categories.map(category => \n      this.viewFactory.create(CategoryTab, { category, icon: categoryIcons[category.key] }));\n    \n    super.renderSync({\n      tabs: this.tabViews.map(view => view.renderSync())\n    });\n\n    return this.el;\n  }\n\n  get currentCategory(): Category {\n    return this.categories[this.activeCategoryIndex];\n  }\n\n  get currentTabView(): CategoryTab {\n    return this.tabViews[this.activeCategoryIndex];\n  }\n\n  setActiveTab(index: number, options: SetActiveOptions = {}): void {\n    this.checkOverflow();\n\n    const oldCategory = this.currentTabView;\n    const newCategory = this.tabViews[index];\n\n    oldCategory.setActive(false, options);\n    newCategory.setActive(true, options);\n    this.activeCategoryIndex = index;\n  }\n\n  private getTargetCategory(index: number): number {\n    if (index < 0) {\n      return this.categories.length - 1;\n    }\n\n    if (index >= this.categories.length) {\n      return 0;\n    }\n\n    return index;\n  }\n  \n  private stepSelectedTab(step: number) {\n    return () => {\n      const newIndex = this.activeCategoryIndex + step;\n      this.setActiveTab(this.getTargetCategory(newIndex), {\n        changeFocusable: true,\n        performFocus: true\n      });\n    };\n  }\n}\n","// Representative emojis for each emoji version. If a given emoji is supported,\n// we assume the system supports that emoji version.\nconst TEST_EMOJIS = [\n  { version: 15, emoji: String.fromCodePoint(0x1FAE8) },\n  { version: 14, emoji: String.fromCodePoint(0x1F6DD) },\n  { version: 13, emoji: String.fromCodePoint(0x1FAC1) },\n  { version: 12, emoji: String.fromCodePoint(0x1F9A9) },\n  { version: 11, emoji: String.fromCodePoint(0x1F9B7) },\n  { version: 5, emoji: String.fromCodePoint(0x1F92A) }, \n  { version: 4, emoji: String.fromCodePoint(0x2695) },\n  { version: 3, emoji: String.fromCodePoint(0x1F922) },\n  { version: 2, emoji: String.fromCodePoint(0x1F5E8) },\n  { version: 1, emoji: String.fromCodePoint(0x1F600) }\n];\n\n/**\n * Determines the latest emoji version that is supported by the browser.\n * @returns the supported emoji version number\n */\nexport function determineEmojiVersion() {\n  const supportedEmoji = TEST_EMOJIS.find(emoji => supportsEmoji(emoji.emoji));\n  return supportedEmoji?.version ?? 1;\n}\n\n/**\n * Checks if the given emoji is rendered correctly by the browser.\n * \n * @param emoji the emoji to attempt to render\n * @returns true if the emoji renders correctly, false otherwise\n */\nfunction supportsEmoji(emoji: string) {\n  const context = document.createElement('canvas').getContext('2d');\n\n  if (context) {\n    context.textBaseline = 'top';\n    context.font = '32px Arial';\n    context.fillText(emoji, 0, 0);\n\n    return context.getImageData(16, 16, 1, 1).data[0] !== 0;\n  }\n}\n","import { Template } from '../Template';\n\nfunction repeat(count, content) {\n  return Array.from({ length: count }, () => content).join('');\n}\n\nfunction header({ showHeader, classes }) {\n  return showHeader ? /* html */`\n    <header class=\"${classes.header}\">\n      <div data-view=\"search\"></div>\n      <div data-view=\"categoryTabs\" data-render=\"sync\"></div>\n    </header>\n  ` : '';\n}\n\nfunction renderPicker(data) {\n  const { classes, theme, className = ''} = data;\n  return /* html */`\n    <div class=\"picmo__picker ${classes.picker} ${theme} ${className}\">\n      ${header(data)}\n      <div class=\"${classes.content}\">\n        <div data-view=\"emojiArea\"></div>\n      </div>\n      <div data-view=\"preview\"></div>\n    </div>\n  `;\n}\n\nfunction renderPlaceholder(data) {\n  const { emojiCount, classes, theme, className, categoryCount } = data;\n\n  const search = ({ showSearch, classes }) => showSearch ? /* html */`\n    <div class=\"${classes.searchSkeleton}\">\n      <div class=\"${classes.searchInput} ${classes.placeholder}\"></div>\n    </div>\n  ` : '';\n\n  const categoryTabs = ({ showCategoryTabs, classes }) => showCategoryTabs ? /* html */`\n    <div class=\"${classes.categoryTabsSkeleton}\">\n      ${repeat(categoryCount, /* html */`<div class=\"${classes.placeholder} ${classes.categoryTab}\"></div>`)}\n    </div>\n  ` : '';\n\n  const header = ({ showHeader, classes }) => showHeader ? /* html */`\n    <header class=\"${classes.headerSkeleton}\">\n      ${search(data)}\n      ${categoryTabs(data)}\n    </header>\n  ` : '';\n\n  const preview = ({ showPreview, classes }) => showPreview ? /* html */`\n    <div class=\"${classes.previewSkeleton}\">\n      <div class=\"${classes.placeholder} ${classes.previewEmoji}\"></div>\n      <div class=\"${classes.placeholder} ${classes.previewName}\"></div>\n      <ul class=\"${classes.tagList}\">\n        ${repeat(3, /* html */`<li class=\"${classes.placeholder} ${classes.tag}\"></li>`)}\n      </ul>\n    </div>\n  ` : '';\n\n  return /* html */`\n    <div class=\"picmo__picker ${classes.skeleton} ${classes.picker} ${theme} ${className}\">\n      ${header(data)}\n      <div class=\"${classes.contentSkeleton}\">\n        <div class=\"${classes.placeholder} ${classes.categoryName}\"></div>\n        <div class=\"${classes.emojiGrid}\">\n          ${repeat(emojiCount, /* html */`<div class=\"${classes.placeholder} ${classes.emoji}\"></div>`)}\n        </div>\n      </div>\n      ${preview(data)}\n    </div>\n  `;\n}\n\nexport default new Template(data => {\n  return data.isLoaded ? renderPicker(data) : renderPlaceholder(data);\n});\n","import { ExternalEvent, ExternalEvents } from '../ExternalEvents';\n\nimport { View } from './view';\nimport { EmojiArea } from './EmojiArea';\nimport { DataError } from './DataError';\nimport { EmojiPreview } from './Preview';\nimport { Search } from './Search';\nimport { VariantPopup } from './VariantPopup';\nimport { CategoryTabs } from './CategoryTabs';\nimport { setProvider } from '../recents';\nimport { DataStore } from '../data/DataStore';\nimport { EventCallback } from '../events';\n\nimport { determineEmojiVersion } from '../emojiSupport';\n\nimport { Category, EmojiRecord, UpdatableOptions } from '../types';\nimport { LATEST_EMOJI_VERSION } from 'emojibase';\n\nimport template from './EmojiPicker.template';\nimport { getPrefixedClasses, replaceChildren } from '../util';\n\nconst classes = getPrefixedClasses(\n  'picker',\n  'skeleton',\n  'placeholder',\n  'searchSkeleton',\n  'searchInput',\n  'categoryTabsSkeleton',\n  'headerSkeleton',\n  'categoryTab',\n  'contentSkeleton',\n  'categoryName',\n  'emojiGrid',\n  'emoji',\n  'previewSkeleton',\n  'previewEmoji',\n  'previewName',\n  'tagList',\n  'tag',\n  'overlay',\n  'content',\n  'fullHeight',\n  'pluginContainer',\n  'header'\n);\n\nconst variableNames = {\n  emojisPerRow: '--emojis-per-row',\n  visibleRows: '--row-count',\n  emojiSize: '--emoji-size'\n};\n\n/**\n * The main emoji picker view. Contains the full picker UI and an event emitter to react to\n * emoji selection events.\n */\nexport class EmojiPicker extends View {\n  pickerReady = false;\n\n  private categories: Category[];\n\n  private categoryTabs: CategoryTabs;\n  private search: Search;\n  private emojiArea: EmojiArea;\n  private preview: EmojiPreview;\n  private variantPopup: VariantPopup | null;\n  private emojiVersion: number;\n\n  private currentView: View;\n\n  private externalEvents = new ExternalEvents();\n\n  constructor() {\n    super({ template, classes });\n  }\n\n  initialize() {\n    this.uiElements = {\n      pickerContent: View.byClass(classes.content),\n      header: View.byClass(classes.header)\n    };\n\n    this.uiEvents = [\n      View.uiEvent('keydown', this.handleKeyDown)\n    ];\n\n    this.appEvents = {\n      error: this.onError,\n      reinitialize: this.reinitialize,\n      'data:ready': this.onDataReady,\n      'content:show': this.showContent,\n      'variantPopup:hide': this.hideVariantPopup,\n      'emoji:select': this.selectEmoji\n    };\n\n    super.initialize();\n    setProvider(this.options.recentsProvider);\n  }\n\n  /**\n   * Destroys the picker when it is no longer needed.\n   * After calling this method, the picker will no longer be usable.\n   *\n   * @returns a Promise that resolves when the destroy is complete.\n   */\n  destroy(): void {\n    super.destroy();\n    this.search?.destroy();\n    this.emojiArea.destroy();\n    this.categoryTabs?.destroy();\n    this.events.removeAll();\n    this.externalEvents.removeAll();\n  }\n\n  /**\n   * Convenience method to clear the recents using the configured recents provider.\n   */\n  clearRecents() {\n    this.options.recentsProvider.clear();\n  }\n\n  /**\n   * Listens for a picker event.\n   *\n   * @param event The event to listen for\n   * @param callback The callback to call when the event is triggered\n   */\n   addEventListener(event: ExternalEvent, callback: EventCallback) {\n    this.externalEvents.on(event, callback);\n  }\n\n  /**\n   * Removes a recent emoji from the picker.\n   *\n   * @param event The event to stop listening for\n   * @param callback The previously bound event listener\n   */\n  removeEventListener(event: ExternalEvent, callback: EventCallback) {\n    this.externalEvents.off(event, callback);\n  }\n\n  /**\n   * Finishes setting up the picker view once the data is ready.\n   * This will only be called if the emoji data is available and all\n   * emoji picker views have been rendered.\n   *\n   * This is the last thing to happen before the emoji picker UI becomes visible.\n   */\n  initializePickerView() {\n    if (this.pickerReady) {\n      this.showContent();\n      this.emojiArea.reset(false);\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    const isShortcut = event.ctrlKey || event.metaKey;\n    if (event.key === 's' && isShortcut && this.search) {\n      event.preventDefault();\n      this.search.focus();\n    }\n  }\n\n  /**\n   * Builds the three sections of the picker:\n   *\n   * - preview area (if enabled in options)\n   * - search area (if enabled in options)\n   * - emoji area (always shown)\n   *\n   * @returns an array containing the three child views. The preview and search\n   *          views are optional, and will be undefined if they are not enabled.\n   */\n  private buildChildViews(): [EmojiPreview, Search, EmojiArea, CategoryTabs] {\n    if (this.options.showPreview) {\n      this.preview = this.viewFactory.create(EmojiPreview);\n    }\n\n    if (this.options.showSearch) {\n      this.search = this.viewFactory.create(Search, {\n        categories: this.categories,\n        emojiVersion: this.emojiVersion\n      });\n    }\n\n    if (this.options.showCategoryTabs) {\n      this.categoryTabs = this.viewFactory.create(CategoryTabs, {\n        categories: this.categories\n      });\n    }\n\n    this.currentView = this.emojiArea = this.viewFactory.create(EmojiArea, {\n      categoryTabs: this.categoryTabs,\n      categories: this.categories,\n      emojiVersion: this.emojiVersion\n    });\n\n    return [this.preview, this.search, this.emojiArea, this.categoryTabs];\n  }\n\n  /**\n   * Sets any CSS variables corresponding to options that were set.\n   */\n  private setStyleProperties() {\n    if (!this.options.showSearch) {\n      this.el.style.setProperty('--search-height-full', '0px');\n    }\n\n    if (!this.options.showCategoryTabs) {\n      this.el.style.setProperty('--category-tabs-height', '0px');\n      this.el.style.setProperty('--category-tabs-offset', '0px');\n    }\n\n    if (!this.options.showPreview) {\n      this.el.style.setProperty('--emoji-preview-height-full', '0px');\n    }\n\n    Object.keys(variableNames).forEach(key => {\n      if (this.options[key]) {\n        this.el.style.setProperty(variableNames[key], this.options[key].toString());\n      }\n    });\n  }\n\n  private updateStyleProperty(option: string, value: any) {\n    this.el.style.setProperty(variableNames[option], value.toString());\n  }\n\n  private reinitialize() {\n    this.renderSync();\n  }\n\n  private onError(error: Error) {\n    const errorView = this.viewFactory.createWithOptions({ data: false }, DataError, { message: this.i18n.get('error.load') });\n    const height = this.el.offsetHeight || 375;\n    this.el.style.height = `${height}px`;\n    replaceChildren(this.el, errorView.renderSync());\n    throw error;\n  }\n\n  /**\n   * Called when the emoji database is ready to be used.\n   *\n   * This will replace the loader placeholder with the full picker UI.\n   */\n  private async onDataReady(db: DataStore) {\n    // Save the current el so we can replace it in the DOM after the new render.\n    const currentView = this.el;\n\n    try {\n      if (db) {\n        this.emojiData = db;\n      } else {\n        await this.emojiDataPromise;\n      }\n\n      if (this.options.emojiVersion === 'auto') {\n        this.emojiVersion = determineEmojiVersion() || parseFloat(LATEST_EMOJI_VERSION);\n      } else {\n        this.emojiVersion = this.options.emojiVersion;\n      }\n\n      this.categories = await this.emojiData.getCategories(this.options);\n\n      const [preview, search, emojiArea, categoryTabs] = this.buildChildViews();\n\n      await super.render({\n        isLoaded: true,\n        search,\n        categoryTabs,\n        emojiArea,\n        preview,\n        showHeader: Boolean(this.search || this.categoryTabs),\n        theme: this.options.theme,\n        className: this.options.className\n      });\n\n      this.el.style.setProperty('--category-count', this.categories.length.toString());\n\n      this.pickerReady = true;\n\n      currentView.replaceWith(this.el);\n      this.setStyleProperties();\n      this.initializePickerView();\n\n      this.setInitialFocus();\n\n      this.externalEvents.emit('data:ready');\n    } catch (error) {\n      this.events.emit('error', error);\n    }\n  }\n\n  /**\n   * Renders the picker.\n   *\n   * @returns the root element of the picker\n   */\n  renderSync(): HTMLElement {\n    let categoryCount = this.options.categories?.length || 10;\n    if (this.options.showRecents) {\n      categoryCount += 1;\n    }\n\n    super.renderSync({\n      isLoaded: false,\n      theme: this.options.theme,\n      className: this.options.className,\n      showSearch: this.options.showSearch,\n      showPreview: this.options.showPreview,\n      showCategoryTabs: this.options.showCategoryTabs,\n      showHeader: this.options.showSearch || this.options.showCategoryTabs,\n      emojiCount: this.options.emojisPerRow * this.options.visibleRows,\n      categoryCount\n    });\n\n    this.el.style.setProperty('--category-count', categoryCount.toString());\n\n    if (!this.options.rootElement) {\n      throw new Error('Picker must be given a root element via the rootElement option');\n    }\n    \n    replaceChildren(this.options.rootElement, this.el);\n    this.setStyleProperties();\n\n    if (this.pickerReady) {\n      this.initializePickerView();\n    }\n\n    return this.el;\n  }\n\n  /**\n   * Determines what element, if any, should be automatically focused when the picker is rendered.\n   * \n   * @returns the focus target, or `null` if nothing should be focused\n   */\n  private getInitialFocusTarget() {\n    if (typeof this.options.autoFocus !== 'undefined') {\n      switch (this.options.autoFocus) {\n        case 'emojis':\n          return this.emojiArea.focusableEmoji;\n        case 'search':\n          return this.search;\n        case 'auto':\n          return this.search || this.emojiArea.focusableEmoji;\n        default:\n          return null;\n      }\n    }\n\n    if (this.options.autoFocusSearch === true) {\n      console.warn('options.autoFocusSearch is deprecated, please use options.focusTarget instead');\n      return this.search;\n    }\n  }\n\n  /**\n   * Sets the initial autofocus, depending on options.\n   */\n  setInitialFocus() {\n    if (!this.pickerReady) {\n      return;\n    }\n\n    this.getInitialFocusTarget()?.focus();\n  }\n\n  /**\n   * Resets the picker to its default, \"inactive\" state.\n   */\n  reset(performFocus = true) {\n    if (this.pickerReady) {\n      this.emojiArea.reset(performFocus);\n      this.showContent(this.emojiArea);\n    }\n\n    this.search?.clear();\n    this.hideVariantPopup();\n  }\n\n  /**\n   * Shows content in the main picker content area.\n   * If no View is specified, the built-in emoji area will be shown.\n   *\n   * The currently shown view will be removed from the DOM and destroyed.\n   *\n   * @param content The View to show\n   */\n  private showContent(content: View = this.emojiArea) {\n    if (content === this.currentView) {\n      return;\n    }\n\n    if (this.currentView !== this.emojiArea) {\n      this.currentView?.destroy();\n    }\n\n    this.ui.pickerContent.classList.toggle(classes.fullHeight, content !== this.emojiArea);\n    replaceChildren(this.ui.pickerContent, content.el);\n    this.currentView = content;\n\n    if (content === this.emojiArea) {\n      this.emojiArea.reset();\n      if (this.categoryTabs) {\n        this.ui.header.appendChild(this.categoryTabs.el);\n      }\n    } else {\n      this.categoryTabs?.el.remove();\n    }\n  }\n\n  /**\n   * Closes and destroys the variant popup.\n   */\n  private hideVariantPopup() {\n    this.variantPopup?.destroy();\n  }\n\n  /**\n   * Given a mouse event, determines if the event occurred on the picker or one of its components.\n   *\n   * @param event The mouse event\n   * @returns true if the click should be treated as on the picker, false otherwise\n   */\n  isPickerClick(event: MouseEvent) {\n    const clickedNode = event.target as Node;\n\n    const isClickInsidePicker = this.el.contains(clickedNode);\n    const isClickOnVariantPopup = this.variantPopup?.el?.contains(clickedNode);\n\n    return isClickInsidePicker || isClickOnVariantPopup;\n  }\n\n  /**\n   * Handles a click on an emoji.\n   * @param emoji The emoji that was clicked\n   * @returns a Promise that resolves when either the variant popup is shown or the emoji is rendered and emitted\n   */\n  private async selectEmoji({ emoji }: { emoji: EmojiRecord }): Promise<void> {\n    // Show the variant popup if the emoji has variants\n    if (emoji.skins?.length && this.options.showVariants && !this.isVariantPopupOpen) {\n      this.showVariantPopup(emoji);\n    } else {\n      await this.variantPopup?.animateHide();\n      this.events.emit('variantPopup:hide');\n      await this.emitEmoji(emoji);\n    }\n  }\n\n  private get isVariantPopupOpen() {\n    return this.variantPopup && !this.variantPopup.isDestroyed;\n  }\n\n  /**\n   * Shows the variant popup for an emoji.\n   *\n   * @param emoji The emoji whose variants are to be shown.\n   * @returns a Promise that resolves when the popup is shown\n   */\n  private async showVariantPopup(emoji: EmojiRecord): Promise<void> {\n    const currentFocus = document.activeElement as HTMLElement;\n    this.events.once('variantPopup:hide', () => {\n      currentFocus?.focus();\n    });\n\n    this.variantPopup = this.viewFactory.create(VariantPopup, { emoji, parent: this.el });\n    this.el.appendChild(this.variantPopup.renderSync());\n    this.variantPopup.activate();\n  }\n\n  /**\n   * Renders an emoji, and emits a public emoji:select event with the rendered result.\n   * @param emoji the emoji that was selected.\n   */\n  private async emitEmoji(emoji: EmojiRecord): Promise<void> {\n    this.externalEvents.emit('emoji:select', await this.renderer.doEmit(emoji));\n    this.options.recentsProvider.addOrUpdateRecent(emoji, this.options.maxRecents);\n    this.events.emit('recent:add', emoji);\n  }\n\n  private updaters = {\n    styleProperty: propertyName => value => this.el.style.setProperty(variableNames[propertyName], value.toString()),\n\n    theme: theme => {\n      const currentTheme = this.options.theme;\n      const container = this.el.closest(`.${currentTheme}`)\n\n      this.el.classList.remove(currentTheme);\n      container?.classList.remove(currentTheme);\n\n      this.el.classList.add(theme);\n      container?.classList.add(theme);\n    },\n\n    className: className => {\n      if (this.options.className) {\n        this.el.classList.remove(this.options.className);\n      }\n\n      this.el.classList.add(className);\n    },\n\n    emojisPerRow: this.updateStyleProperty.bind(this, 'emojisPerRow'),\n    emojiSize: this.updateStyleProperty.bind(this, 'emojiSize'),\n    visibleRows: this.updateStyleProperty.bind(this, 'visibleRows')\n  }\n\n  updateOptions(options: UpdatableOptions) {\n    Object.keys(options).forEach(option => {\n      this.updaters[option](options[option]);\n    });\n\n    Object.assign(this.options, options);\n  }\n}\n","import { AppEvent } from './AppEvents';\nimport { DataStore } from './data/DataStore';\nimport { Events } from './events';\nimport { Bundle } from './i18n/bundle';\nimport { Renderer } from './renderers/renderer';\nimport { PickerOptions, EmojiRecord } from './types';\nimport { View } from './views/view';\n\ntype ViewFactoryOptions = {\n  data?: boolean;\n};\n\ntype DependencyMapping = {\n  events: Events<AppEvent>;\n  i18n: Bundle;\n  renderer: Renderer;\n  emojiData: Promise<DataStore>;\n  options: PickerOptions;\n  customEmojis: EmojiRecord[];\n  pickerId: string;\n};\n\nexport type ViewConstructor<T extends View> = new (...args: any[]) => T;\nexport type ViewConstructorParameters<T extends View> = ConstructorParameters<ViewConstructor<T>>;\n\nexport class ViewFactory {\n  private events: Events<AppEvent>;\n  private i18n: Bundle;\n  private renderer: Renderer;\n  private emojiData: Promise<DataStore>;\n  private options: PickerOptions;\n  private customEmojis: EmojiRecord[];\n  private pickerId: string;\n\n  constructor({ events, i18n, renderer, emojiData, options, customEmojis = [], pickerId }: DependencyMapping) {\n    this.events = events;\n    this.i18n = i18n;\n    this.renderer = renderer;\n    this.emojiData = emojiData;\n    this.options = options;\n    this.customEmojis = customEmojis;\n    this.pickerId = pickerId;\n  }\n\n  setEmojiData(emojiData: DataStore) {\n    this.emojiData = Promise.resolve(emojiData);\n  }\n\n  createWithOptions<T extends View>(options: ViewFactoryOptions = {}, constructor: ViewConstructor<T>, ...args: ViewConstructorParameters<T>): T {\n    const view = new constructor(...args);\n    \n    view.setPickerId(this.pickerId);\n    view.setEvents(this.events);\n    view.setI18n(this.i18n);\n    view.setRenderer(this.renderer);\n\n    if (options.data !== false) {\n      view.setEmojiData(this.emojiData);\n    }\n\n    view.setOptions(this.options);\n    view.setCustomEmojis(this.customEmojis);\n\n    view.viewFactory = this;\n\n    view.initialize();\n    return view;\n  }\n\n  create<T extends View>(constructor: ViewConstructor<T>, ...args: ViewConstructorParameters<T>): T {\n    return this.createWithOptions({}, constructor, ...args);\n  }\n}\n","export type Dictionary = Record<string, string>;\n\nexport class Bundle {\n  #dictionary: Map<string, string>;\n\n  constructor(dictionary: Dictionary = {}) {\n    this.#dictionary = new Map(Object.entries(dictionary));\n  }\n\n  get(key: string, fallback = key): string {\n    return this.#dictionary.get(key) || fallback;\n  }\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import styleInject from 'style-inject';\nimport globalConfig from './globalConfig';\n\nexport function createStyleInjector() {\n  let isInjected = false;\n\n  return function inject(css) {\n    if (globalConfig.injectStyles && !isInjected) {\n      styleInject(css);\n      isInjected = true;\n    }\n  }\n}","import { AppEvents } from './AppEvents';\nimport { EmojiPicker } from './views/EmojiPicker';\nimport { PickerOptions, CustomEmoji, EmojiRecord } from './types';\nimport { ViewFactory } from './viewFactory';\nexport { LazyLoader } from './LazyLoader';\nimport { DataStore } from './data/DataStore';\nimport { initDatabase } from './data/emojiData';\nimport { Bundle } from './i18n/bundle';\nimport { getOptions } from './options';\nimport { createStyleInjector } from './injectStyles';\n\nimport css from './styles/index.css?inline';\n\nfunction initData(options: PickerOptions): Promise<DataStore> {\n  return initDatabase(options.locale, options.dataStore, options.messages, options.emojiData);\n}\n\nlet pickerIndex = 0;\n\nlet emojiDataPromise;\n\nfunction getPickerId() {\n  return `picmo-${Date.now()}-${pickerIndex++}`;\n}\n\nconst styleInject = createStyleInjector();\n\n/**\n * Creates a new emoji picker.\n * @param options The options for the emoji picker.\n * @returns a Promise that resolves to the picker when it is ready.\n */\nexport function createPicker(options: Partial<PickerOptions>): EmojiPicker {\n  styleInject(css);\n  \n  const finalOptions = getOptions(options);\n  const customEmojis: EmojiRecord[] = (finalOptions?.custom || []).map((custom: CustomEmoji) => ({\n    ...custom,\n    custom: true,\n    tags: ['custom', ...(custom.tags || [])]\n  }));\n\n  const events = new AppEvents();\n  if (!emojiDataPromise) {\n    emojiDataPromise = initData(finalOptions);\n  }\n\n  const i18n = new Bundle(finalOptions.i18n);\n\n  emojiDataPromise.then(emojiData => {\n    events.emit('data:ready', emojiData);\n  }).catch(error => {\n    events.emit('error', error);\n  });\n\n  const viewFactory = new ViewFactory({\n    events,\n    i18n,\n    customEmojis,\n    renderer: finalOptions.renderer,\n    options: finalOptions,\n    emojiData: emojiDataPromise,\n    pickerId: getPickerId()\n  });\n\n  const picker = viewFactory.create(EmojiPicker);\n  picker.renderSync();\n  return picker;\n}","export default {\n    'categories.activities': 'Aktivitäten',\n    'categories.animals-nature': 'Tiere & Natur',\n    'categories.custom': 'Benutzerdefiniert',\n    'categories.flags': 'Flaggen',\n    'categories.food-drink': 'Essen & Trinken',\n    'categories.objects': 'Gegenstände',\n    'categories.people-body': 'Mensch & Körper',\n    'categories.recents': 'Zuletzt genutzt',\n    'categories.smileys-emotion': 'Smileys & Emotionen',\n    'categories.symbols': 'Symbole',\n    'categories.travel-places': 'Reisen & Orte',\n    'error.load': 'Emojis wurden nicht geladen',\n    'recents.clear': 'Zuletzt genutzte Emojis löschen',\n    'recents.none': 'Kein Emoji ausgewählt.',\n    'retry': 'Erneut versuchen',\n    'search.clear': 'Suche löschen',\n    'search.error': 'Suche erfolglos',\n    'search.notFound': 'Kein Emoji gefunden',\n    'search': 'Emojis durchsuchen ...'\n  };\n  ","export default {\n    'categories.activities': 'Aktiviteetit',\n    'categories.animals-nature': 'Eläimet & luonto',\n    'categories.custom': 'Mukautettu',\n    'categories.flags': 'Liput',\n    'categories.food-drink': 'Ruoka & juoma',\n    'categories.objects': 'Esineet',\n    'categories.people-body': 'Ihmiset & keho',\n    'categories.recents': 'Viimeksi käytetty',\n    'categories.smileys-emotion': 'Hymiöt & tunne',\n    'categories.symbols': 'Symbolit',\n    'categories.travel-places': 'Matkustus & paikat',\n    'error.load': 'Emojien lataaminen epäonnistui',\n    'recents.clear': 'Tyhjennä viimeksi käytetyt emojit',\n    'recents.none': 'Et ole valinnut vielä emojia.',\n    'retry': 'Kokeile uudestaan',\n    'search.clear': 'Tyhjennä haku',\n    'search.error': 'Emojien etsiminen epäonnistui',\n    'search.notFound': 'Emojia ei löytynyt',\n    'search': 'Etsi emojia...'\n  };\n  ","export default {\n    'categories.activities': 'Activités',\n    'categories.animals-nature': 'Animaux et nature',\n    'categories.custom': 'Personnalisé',\n    'categories.flags': 'Drapeaux',\n    'categories.food-drink': 'Nourriture et boissons',\n    'categories.objects': 'Objets',\n    'categories.people-body': 'Personnes et corps',\n    'categories.recents': 'Récemment utilisé',\n    'categories.smileys-emotion': 'Visages et émotions',\n    'categories.symbols': 'Symboles',\n    'categories.travel-places': 'Voyages et lieux',\n    'error.load': 'Échec du chargement des émojis',\n    'recents.clear': 'Effacez les émojis récents',\n    'recents.none': 'Vous n\\'avez pas encore sélectionné d\\'émojis.',\n    'retry': 'Essayez à nouveau',\n    'search.clear': 'Effacer la recherche',\n    'search.error': 'Échec de la recherche d\\'émojis',\n    'search.notFound': 'Aucun émoji trouvé',\n    'search': 'Rechercher des émojis...'\n  };\n  ","export default {\n    'categories.activities': 'Activiteiten',\n    'categories.animals-nature': 'Dieren & Natuur',\n    'categories.custom': 'Aangepast',\n    'categories.flags': 'Vlaggen',\n    'categories.food-drink': 'Eten & Drinken',\n    'categories.objects': 'Voorwerpen',\n    'categories.people-body': 'Mens & Lichaam',\n    'categories.recents': 'Laatst gebruikt',\n    'categories.smileys-emotion': 'Smileys en emoties',\n    'categories.symbols': 'Symbolen',\n    'categories.travel-places': 'Reizen & Plaatsen',\n    'error.load': 'Kan emoji\\'s niet laden',\n    'recents.clear': 'Wis recente emoji\\'s',\n    'recents.none': 'Geen emoji geselecteerd.',\n    'retry': 'Probeer het nog eens',\n    'search.clear': 'Zoekopdracht wissen',\n    'search.error': 'Zoeken mislukt',\n    'search.notFound': 'Geen emoji gevonden',\n    'search': 'Zoek emoji...'\n  };\n  ","export default {\n    'categories.activities': 'Aktiviteter',\n    'categories.animals-nature': 'Dyr & natur',\n    'categories.custom': 'Tilpasset',\n    'categories.flags': 'Flagg',\n    'categories.food-drink': 'Mat & drikke',\n    'categories.objects': 'Objekter',\n    'categories.people-body': 'Mennesker & kropp',\n    'categories.recents': 'Nylig brukte',\n    'categories.smileys-emotion': 'Smilefjes & følelser',\n    'categories.symbols': 'Symboler',\n    'categories.travel-places': 'Reise & steder',\n    'error.load': 'Klarte ikke laste inn emojis',\n    'recents.clear': 'Fjern nylige emojis',\n    'recents.none': 'Du har ikke valgt noen emojis enda.',\n    'retry': 'Prøv igjen',\n    'search.clear': 'Tøm søk',\n    'search.error': 'Klarte ikke å søke etter emojis',\n    'search.notFound': 'Ingen emojis funnet',\n    'search': 'Søk etter emojis...'\n  };\n  ","export default {\n    'categories.activities': 'Aktiviteter',\n    'categories.animals-nature': 'Djur & natur',\n    'categories.custom': 'Anpassad',\n    'categories.flags': 'Flagga',\n    'categories.food-drink': 'Mat & dryck',\n    'categories.objects': 'Objekt',\n    'categories.people-body': 'Människor & kropp',\n    'categories.recents': 'Nyligen använd',\n    'categories.smileys-emotion': 'Humör & känslor',\n    'categories.symbols': 'Symboler',\n    'categories.travel-places': 'Resor & platser',\n    'error.load': 'Det gick inte att ladda emojis',\n    'recents.clear': 'Ta bort de senaste emojis',\n    'recents.none': 'Du har inte valt några emojis än',\n    'retry': 'Försök igen',\n    'search.clear': 'Tom sökning',\n    'search.error': 'Det gick inte att söka efter emojis',\n    'search.notFound': 'Inga emojis hittades',\n    'search': 'Sök efter emojis...'\n  };\n  ","import { isSessionStorageAvailable } from '../util';\nimport { createStorage } from '../webStorageShim';\nimport { WebStorageProvider } from './WebStorageProvider';\n\nexport class SessionStorageProvider extends WebStorageProvider {\n  constructor() {\n    super(isSessionStorageAvailable() ? sessionStorage : createStorage());\n  }\n}\n","import { EmojiRecord } from '../types';\nimport { RecentsProvider } from './RecentsProvider';\n\nexport class InMemoryProvider extends RecentsProvider {\n  recents = [] as Array<EmojiRecord>;\n\n  clear(): void {\n    this.recents = [];\n  }\n\n  getRecents(maxCount: number): Array<EmojiRecord> {\n    return this.recents.slice(0, maxCount);\n  }\n\n  addOrUpdateRecent(emoji: EmojiRecord, maxCount: number): void {\n    this.recents = [\n      emoji,\n      ...this.getRecents(maxCount).filter(recent => recent.hexcode !== emoji.hexcode)\n    ].slice(0, maxCount);\n  }\n}\n","import { Locale, MessagesDataset, Emoji } from 'emojibase';\nimport { initDatabase as initDatabaseInternal } from './data/emojiData';\n\nexport * from './util';\nexport * from './focusTrap';\nexport * from './options';\nexport * from './events';\nexport * from './types';\nexport * from './themes';\nexport { default as globalConfig } from './globalConfig';\nexport { createPicker } from './createPicker';\nexport { EmojiPicker } from './views/EmojiPicker';\nexport type { ExternalEvent, ExternalEventKey } from './ExternalEvents';\n\nexport { Renderer } from './renderers/renderer';\nexport { NativeRenderer } from './renderers/native';\n\nimport * as i18n from './i18n';\nexport { i18n };\n\nexport { default as en } from './i18n/lang-en';\nexport { deleteDatabase } from './data/emojiData';\nimport { DataStoreFactory } from './data/DataStore';\nexport { createStyleInjector } from './injectStyles';\nexport { IndexedDbStoreFactory } from './data/IndexedDbStore';\nexport { InMemoryStoreFactory } from './data/InMemoryStore';\n\nexport * from './recents/index';\n\nexport async function createDatabase(locale: Locale, factory: DataStoreFactory, staticMessages?: MessagesDataset, staticEmojis?: Emoji[]): Promise<void> {\n  const database = await initDatabaseInternal(locale, factory, staticMessages, staticEmojis);\n  database.close();\n}\n\n"],"names":["LATEST_EMOJI_VERSION","getFetchUrl","path","version","cdnUrl","fetchUrl","fetchFromCDN","options","local","opts","storage","cacheKey","cachedData","response","data","ALIASES","fetchShortcodes","locale","preset","_ALIASES$preset","joinShortcodesToEmoji","emoji","shortcodeDatasets","list","dataset","shortcodes","code","skin","flattenEmojiData","emojis","skins","baseEmoji","skinEmoji","joinShortcodes","fetchEmojis","compact","flat","presets","promise","customLocale","customPreset","fetchMessages","getEmojiForEvent","event","emojiElement","e","shouldAnimate","_a","matcher","caseInsensitiveIncludes","str","search","throttle","fn","wait","timeout","debounce","args","animate","element","keyframes","pickerOptions","propertyIndex","finalState","result","key","values","toElement","html","template","computeHash","obj","arr","hashBuffer","b","getPrefixedClasses","classNames","className","prefixClassName","empty","replaceChildren","parent","children","isStorageAvailable","isSessionStorageAvailable","isLocalStorageAvailable","getEmojiRecord","queryMatches","query","categories","category","tag","DataStore","rules","emojiVersion","applyRulesToEmoji","rule","applyRules","instances","InMemoryStoreFactory","InMemoryStore","includeList","a","emojiResults","customEmojis","matchingEmojis","matchingCustom","results","meta","getCdnUrls","base","getEtag","url","getEtags","emojisUrl","messagesUrl","checkUpdates","db","emojisEtag","messagesEtag","etags","storedEmojisEtag","storedMessagesEtag","messages","checkLocalUpdates","hash","storedHash","openDatabase","factory","existingDb","initDatabaseFromCdn","initDatabaseWithLocalData","initDatabase","staticMessages","staticEmojis","deleteDatabase","FocusTrap","rootElement","referenceElement","targetElement","lightTheme","darkTheme","autoTheme","View","classes","events","pickerId","i18n","renderer","emojiDataPromise","emojiData","templateData","handler","binding","observer","record","target","clock","flag","frown","gamepad","lightbulb","mug","plane","robot","sad","smiley","symbols","tree","users","warning","xmark","createIcon","iconName","svg","el","icons","categoryIcons","icon","name","size","defaultOptions","_templateFn","_mode","_renderChildViews","renderChildViews_fn","_bindIcons","bindIcons_fn","_bindPlaceholders","bindPlaceholders_fn","Template","templateFn","__privateAdd","__privateSet","__privateGet","__privateMethod","placeholders","asyncViews","placeholder","view","iconKey","replacement","Image","src","img","Renderer","content","urlResolver","image","lazyLoader","resolver","contentElement","label","additionalClasses","NativeRenderer","hexcode","en","DATABASE_NAME","IndexedDbStoreFactory","IndexedDbStore","resolve","reject","request","emojiStore","store","transaction","property","groups","tasks","categoryStore","groupsIndex","records","cursor","error","storeName","mode","callback","storeNames","stores","objects","object","createStorage","value","index","RecentsProvider","STORAGE_KEY","WebStorageProvider","maxCount","recents","recent","LocalStorageProvider","getOptions","_events","_getBindings","getBindings_fn","_addListener","addListener_fn","Events","context","bindings","h","once","globalConfig","AppEvents","ExternalEvents","BaseEmojiCategory","showVariants","active","focusTarget","performFocus","template$b","Emoji","FocusGrid","columnCount","emojiCount","initialRow","initialColumn","wrap","row","column","previousIndex","template$a","EmojiContainer","preview","fullHeight","_b","_c","_d","targetView","header","emojiArea","from","to","button","template$9","EmojiCategory","RecentEmojiContainer","existing","newView","EmojiView","excess","i","template$8","RecentEmojiCategory","provider","template$7","CustomEmojiCategory","LazyLoader","root","entries","entry","categoryClasses","getCategoryClass","getFocusTarget","focus","EmojiArea","categoryTabs","categoryEmojiElements","Category","c","categoryView","scroll","categoryIndex","targetPosition","currentPosition","maxScroll","targetCategory","errorTemplate","classList","message","ErrorMessage","template$5","DataError","tagTemplate","EmojiPreview","tags","clearSearchButtonTemplate","searchTemplate","Search","accessory","searchResults","template$3","animationOptions","overlayAnimation","popupAnimation","VariantPopup","hideOptions","newIndex","currentFocusedEmoji","newFocusedEmoji","variants","variant","template$2","CategoryTab","changeFocusable","template$1","CategoryTabs","hasOverflowRight","hasOverflowLeft","oldCategory","newCategory","step","TEST_EMOJIS","determineEmojiVersion","supportedEmoji","supportsEmoji","repeat","count","showHeader","renderPicker","theme","renderPlaceholder","categoryCount","showSearch","showCategoryTabs","showPreview","variableNames","EmojiPicker","propertyName","currentTheme","container","isShortcut","option","errorView","height","currentView","clickedNode","isClickInsidePicker","isClickOnVariantPopup","currentFocus","ViewFactory","constructor","_dictionary","Bundle","dictionary","fallback","styleInject","css","ref","insertAt","head","style","createStyleInjector","isInjected","initData","pickerIndex","getPickerId","createPicker","finalOptions","custom","picker","langDe","langFi","langFr","langNl","langNo","langSv","SessionStorageProvider","InMemoryProvider","createDatabase","initDatabaseInternal"],"mappings":"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"}